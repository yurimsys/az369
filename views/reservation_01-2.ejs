<!DOCTYPE html>
<html lang="ko">

<head>
    <% include templates/head.ejs %>
    <link rel="stylesheet" href="/css/common_box.css">
    <link rel="stylesheet" href="/css/reservation_01-2.css">

    <title>AZ369 - 장차버스예매</title>

    <!--문자인코딩-->
    <meta name="title" content="AZ369 - 장차버스예매">
    <meta name="author" content="AZ369">
    <meta name="description" content="안녕하세요. 보세의류 전문 쇼핑몰 AZ369입니다. 저희 AZ369는 평택 가로수길 센트럴돔과 함께합니다.">
    <meta name="keywords"
        content="센트럴돔, 보세의류, 쇼핑몰, 보세의류 쇼핑몰, 평택, 평택 가로수길, 평택 센트럴돔, 소사벌, 비전동, 장차, 입점신청, 입점, az369, AZ369">
    <meta property="og:image" content="http://az369.com/img/main/main_slide01.png" />

    <!--reservation css link-->
    <link rel="stylesheet" type="text/css" href="/css/lib/jquery.seat-charts.css">
    <link rel="stylesheet" type="text/css" href="/css/lib/booking.css">
    <!--<link rel="stylesheet" type="text/css" href="/css/lib/bootstrap.min.css">-->
    <link rel="stylesheet" type="text/css" href="/css/lib/bootstrap-theme.css">
    <link rel="stylesheet" type="text/css" href="/css/lib/bootstrap-theme.min.css">


</head>

<body>
    <div class="wrap">

        <% include templates/header.ejs %>
        <!--secton.sub_wrap 시작-->

        <!--reservation01의 오른쪽 영역 MO 1024px, 768, 414 적용-->
        <section class="sub_wrap">
            <div class="inner_sub_wrap">

                <div class="box">

                    <h6>장차버스예매</h6>
                    <h1 style="font-family: 'PT Serif', serif;">RESERVATION</h1>
                    <div class="bar"></div>

                    <div class="reservation_box">
                        <!-- <div class="bus_info"> <div class="bus_info_box">운행정보</div> <div class="bus_info_txt"> 01.31(월)평택 22:00 - 동대문 04:00<br> 유림고속(1234)</div></div> -->
                        <div class="bus_info"> <div class="bus_info_box">운행정보</div> <div class="bus_info_txt"> 현재 장차 정보가 없습니다. 다음에 이용해주세요<br></div></div>
                        <!--<div id="01" class="tabcontent">-->
                        <div class="container">
                            <!--좌석선택표-->
                            <div class="seat_wrap">
                                <div class="seat-map" class="seat-panel"></div>
                            </div>
                            <div class="select_seat">
                                <button class="reload_btn_top reload_btn" onclick="flushSeat()"><img src="img/reservation/reload.png"
                                        alt="새로고침">
                                    <p>좌석 새로고침</p>
                                </button>
                        
                                <h4>좌석선택 <span>(최대 4개)</span></h4>
                                <div class="seat_table">
                                    <dl>
                                        <dt>선택좌석</dt>
                                        <dd id="selected_seats_num">　</dd>
                                    </dl>
                                    <dl>
                                        <dt>좌석개수</dt>
                                        <dd id="selected_seats_cnt">　</dd>
                                    </dl>
                                    <dl>
                                        <dt>결제금액</dt>
                                        <dd id="selected_seats_price"></dd>
                                    </dl>
                        
                                    <!--좌석선택 텍스트-->
                                    <button class="reload_btn_bottom reload_btn" onclick="flushSeat()"><img src="img/reservation/reload.png"
                                            alt="새로고침">
                                        <p>좌석 새로고침</p>
                                    </button>
                                </div>
                        
                        
                            </div>
                        
                        </div>

                    </div>
                </div>
                <div class="reservation_btn_mo">
                    <ul>
                        <li><a href="/" class="back">뒤로</a></li>
                        <li><a onclick="showPayment()" class="payment_open">예매하기</a></li>
                    </ul>
                </div>
                <div class="reservation_btn_mo no_data_seat">
                    <ul>
                        <li style="width: 100%;"><a href="/" class="back">뒤로</a></li>
                    </ul>
                </div>


            </div>

            <div id="payment" class="layer" style="overflow:scroll;">
                <!--popup PC-->
                <div class="payment_box scroll_style">
                    
                    <div class="payment_box_inner">
                        <div class="info_table">
                            <div class="payment_tit">
                                예매정보 및 결제금액
                            </div>
                            <dl>
                                <dt>운행지역</dt>
                                <dd>평택 - 서울 동대문</dd>
                            </dl>
                            <dl class="info_time">
                                <dt>출발시간</dt>
                                <dd><span class="region">평택</span> <span id="payment_deptTe">2020.02.03(월) 22:00</span>
                                </dd>
                                <dd><span class="region">서울 동대문</span> <span id="payment_retuTe">2020.02.04(화)
                                        04:00</span></dd>
                            </dl>
                            <dl>
                                <dt>차량정보</dt>
                                <dd id="payment_car_info"> - </dd>
                            </dl>
                            <dl>
                                <dt>좌석개수</dt>
                                <dd id="payment_seats_cnt">1개</dd>
                            </dl>
                            <dl>
                                <dt>좌석번호</dt>
                                <dd id="payment_seats_nums">01번</dd>
                            </dl>
                        </div>
                        <div class="price">
                            <dl class="reserve_price">
                                <dt>예매금액</dt>
                                <dd id="original_price"></dd>
                            </dl>
                            <dl class="price_sale">
                                <dt>할인금액</dt>
                                <dd id="sale_price">0원</dd>
                            </dl>
                            <dl class="total_dl">
                                <dt>총 결제금액</dt>
                                <dd class="total_price" id='total_price'>0원</dd>
                            </dl>
                        </div>

                        <div class="payment_select">
                            <label for="select">결제수단</label>
                            <select id='pay_type'>
                                <option value='null'>선택</option>
                                <option value='free'>무료예매</option>
                                <option value='CARD'>신용카드</option>
                                <option value='BANK'>계좌이체</option>
                                <option value='VBANK'>무통장입금</option>
                                <option value='EPAY'>간편결제</option>
                            </select>
                        </div>

                        <div class="notice">
                            <h5>NOTICE</h5>
                            <p>8월 1일 ~ 8월 31일까지 장차이용 무료서비스가 진행중입니다.</p>
                            <p>취소 및 환불은 출발일로부터 <span style="font-weight: 400; color: #222;">3일 전</span>까지 가능합니다.</p>
                            <p>출발일 3일 전까지 버스를 예매한 적정 인원수가 부족할 경우 차량이 변경될 수 있습니다.</p>
                        </div>


                        <ul class="payment_btn">
                            <li>
                                <a class="payment_close btn btn-secondary " onclick="payBack()">취소</a>
                            </li>

                            <li>
                                <a onclick="processPayment()" class="payment_close payment_close2">결제하기</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>



    </div>

    </section>

        <!--<footer></footer>-->
        <% include templates/footer.ejs %>
    </div>
    <!-- 이노페이 -->
    <script type="text/javascript" src="https://pg.innopay.co.kr/ipay/js/jquery-2.1.4.min.js"></script>
    <script type="text/javascript" src="https://pg.innopay.co.kr/ipay/js/innopay-2.0.js" charset="utf-8"></script>
    <!--reservation 스크립트-->
    <script src="/js/lib/jquery-1.11.0.min.js"></script>
    <script src="/js/lib/jquery.seat-charts.js"></script>
    <script src="/js/lib/bootstrap.js"></script>
    <script src="/js/lib/bootstrap.min.js"></script>
    <script src="/js/lib/angular.min.js"></script>

    <script>
        const user_name = "<%=sessionUser.U_Name%>";
        const user_id = "<%=sessionUser.U_ID%>"
        let now_location = 'default';
        $(document).ready(function(){
            $.ajax({
                url: "api/user/resCarList",
                method: "post",
                dataType: "json",
                success: function (res) {
                    if(res.data.length == 0){
                        $('.container').css('display','none');
                        $('.reservation_btn_mo').css('display','none');
                        $('.no_data_seat').css('display','block');
                    }else{
                        $('.no_data_seat').css('display','none');
                    }

                    sessionStorage.setItem("car_list", JSON.stringify(res.data));
                    sessionStorage.setItem("deptTime",JSON.stringify(res.dept));
                    sessionStorage.setItem("returnTime",JSON.stringify(res.return));
                    let ctId = res.data[0].ctID
                    let price = res.data[0].seatPrice;
                    openBus(ctId,price);
                }
            });

            
            if(location.search == '?pay_test'){
                sessionStorage.setItem('isTest','test');
                $('#pay_type option[value="free"]').remove();
            }else{
                sessionStorage.removeItem('isTest','test');
                $('#pay_type option[value="CARD"]').remove();
                $('#pay_type option[value="BANK"]').remove();
                $('#pay_type option[value="VBANK"]').remove();
                $('#pay_type option[value="EPAY"]').remove();
            }

        })
        var firstSeatLabel = 1;
        var selected_seats_cnt = 0,
            selected_seats = [];

        function openBus(busSeat,price) {
            
            let car_info = JSON.parse(sessionStorage.getItem("car_list"));
            //버스 정보
            let bus_text1 = car_info[0].startDay+'(' +getInputDayLabel(car_info[0].deptDay)+') ';
            let bus_text2 = '평택 '+car_info[0].startTime+' - '+'동대문 '+car_info[0].returnTime + ' ';
            let bus_text3 = car_info[0].b_name+'('+car_info[0].backNum+')';
            $('.bus_info_txt').text(bus_text1 + bus_text2 + bus_text3)

            // console.log('bus',bus_text1);

            // console.log('evt',evt);
            var i, tablinks
            //좌석 선택시 우측 문구 삭제
            $('.before_p').css('display','none');
            sessionStorage.removeItem('seat_price');
            tablinks = document.getElementsByClassName("tablinks");
            //alert(seatPrice);
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            sessionStorage.setItem('ct_id', busSeat);
            //좌석금액 세션에 저장
            // sessionStorage.setItem('seat_price', evt.currentTarget.value);
            sessionStorage.setItem('seat_price', price);

            // document.getElementById("bus_seat_layer").style.display = "block";
            // evt.currentTarget.className += " active";
            var firstSeatLabel = 1;


            //좌석금액 불러오기
            var seatPay = Number(sessionStorage.getItem('seat_price'));

            var $cart = $('#selected-seats'),
                $nums = $('#selected_seats_num'),
                $counter = $('#selected_seats_cnt'),
                $now_price = $('#selected_seats_price'),
                $origin_price = $('#original_price'),
                $sale_price = $('#sale_price'),
                $payment_seats_cnt = $('#payment_seats_cnt'),
                $payment_seats_nums = $('#payment_seats_nums'),
                $total_price = $('#total_price'),
                sc = $('.seat-map').seatCharts({
                    map: [
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'eeeee',
                    ],
                    seats: {
                        e: {

                            classes: '일반', //your custom CSS class
                            category: '일반'
                        }

                    },
                    naming: {
                        top: false,
                        getLabel: function (character, row, column) {
                            return firstSeatLabel++;
                        },
                    },
                    click: function () {
                        if (this.status() == 'available') {
                            if (selected_seats_cnt >= 4) {
                                alert("최대 4개까지 선택가능합니다.");
                                return this.style();
                            }
                            selected_seats_cnt = sc.find('selected').length + 1;
                            selected_seats.push(this.settings.label);
                            let origin_price = recalculateTotal(sc) + Number(sessionStorage.getItem("seat_price"));

                            $nums.text('　'.concat(selected_seats.join('번, ') + ((selected_seats.length > 0) ? '번' : '')));
                            $payment_seats_nums.text(selected_seats.join('번, ') + ((selected_seats.length > 0) ? '번' : ''));

                            $counter.text('　'.concat(sc.find('selected').length + 1));
                            $payment_seats_cnt.text(sc.find('selected').length + 1);
                            $origin_price.text(formatNumber(origin_price) + '원');
                            $origin_price.data('price', origin_price);
                            //할인 가격
                            // $sale_price.text('-' + formatNumber(origin_price) + '원');
                            // $sale_price.data('price', origin_price);

                            $now_price.text('　'+origin_price+'원')
                            $total_price.text(origin_price+'원')
                            return 'selected';
                        } else if (this.status() == 'selected') {
                            selected_seats_cnt = sc.find('selected').length - 1;
                            let idx = selected_seats.indexOf(this.settings.label);
                            selected_seats.splice(idx, 1);

                            let origin_price = recalculateTotal(sc) - Number(sessionStorage.getItem("seat_price"));

                            $nums.text('　'.concat(selected_seats.join('번, ') + ((selected_seats.length > 0) ? '번' : '')));
                            $payment_seats_nums.text(selected_seats.join('번, ') + ((selected_seats.length > 0) ? '번' : ''));

                            $counter.text('　'.concat(sc.find('selected').length - 1));
                            $payment_seats_cnt.text(sc.find('selected').length - 1);
                            $origin_price.text(formatNumber(origin_price) + '원');
                            $origin_price.data('price', origin_price);
                            $sale_price.text('-' + formatNumber(origin_price) + '원');
                            $sale_price.data('price', origin_price);
                            $now_price.text(origin_price+'원')
                            //seat has been vacated
                            if(selected_seats_cnt === 0){
                                $nums.text('　');
                                $now_price.text('　');
                                $counter.text('　');
                            }
                            return 'available';
                        } else if (this.status() == 'unavailable') {
                            //seat has been already booked
                            return 'unavailable';
                        } else {
                            return this.style();
                        }
                    }
                });

            //this will handle "[cancel]" link clicks
            $('#selected-seats').on('click', '.cancel-cart-item', function () {
                //let's just trigger Click event on the appropriate seat, so we don't have to repeat the logic here
                sc.get($(this).parents('li:first').data('seatId')).click();
            });
            flushSeat();

        }

        
        function recalculateTotal(sc) {
            var total = 0;

            //basically find every selected seat and sum its price
            sc.find('selected').each(function () {
                total += Number(sessionStorage.getItem("seat_price"));
            });

            return total;
        }

        function formatNumber(num) {
            return num.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')
        }

        function flushSeat() {
            var sc = $('.seat-map').seatCharts();
            selected_seats = [];
            selected_seats_cnt = 0;

            sc.find('e.selected').status('available');
            $("#selected_seats_num").text('　');
            $("#selected_seats_cnt").text('　');
            $('#selected_seats_price').text('　');
            // 데이터 가져와서 예약된 좌석 상태 설정.
            var ct_id = sessionStorage.getItem('ct_id');
            $.ajax({
                dataType: "json",
                method: "GET",
                url: "/api/useSeat/" + ct_id
            }).done((res) => {
                let seat_id_list = [];

                res.data.map((seat_num) => {
                    seat_id_list.push(getSeatId(seat_num));
                });

                sc.find('unavailable').status('available');
                sc.status(seat_id_list, 'unavailable');
            });
        }

        // 45인승 기준 seatId 가져오기
        function getSeatId(seat_num) {
            if (seat_num <= 45 && seat_num > 0) {

                let seat_id = "1_1";
                let row = '',
                    column = '';

                if (seat_num > 40) {
                    row = 11;
                    column = seat_num % 10;
                } else {
                    if ((seat_num % 4) === 0) {
                        row = Number.parseInt(seat_num / 4);
                        column = 4;
                    } else {
                        row = (Number.parseInt(seat_num / 4)) + 1;
                        column = seat_num % 4;
                    }

                    if (column >= 3) column += 1;
                }

                seat_id = row + "_" + column;
                return seat_id;
            } else {
                return null;
            }

        }
        //예매하기 버튼
        function showPayment() {
            if($('.seatCharts-seat').hasClass('selected') == false){
                alert('좌석을 선택해 주세요.');
                return false;
            }else{
                $.ajax({
                    method: "get",
                    dataType: "json",
                    url: "/api/bus_check",
                    data : {'ct_id' : JSON.parse(sessionStorage.getItem("car_list"))[0].ctID},
                    success: function(res){
                        if(res.data == 500){
                            swal({
                                title: '예매 실패',
                                text: '선택하신 버스는 이미 출발하였습니다. 다른 버스를 이용해 주세요.',
                                icon: 'error',
                                button: '확인'
                            }).then(function(){
                                location.href = "/reservation2";
                            }) 
                        }else{
                            $('footer').css('z-index','-1000');
                            $('header').css('z-index','1000');
                            $('.layer').css('z-index','2000')
                            let car_list = JSON.parse(sessionStorage.getItem("car_list")),
                                ct_id = sessionStorage.getItem("ct_id");

                            // let reserve_car_info = car_list.find((k) => (k.ctID == ct_id)),
                            //     deptTe = reserve_car_info.deptTe,
                            //     retuTe = reserve_car_info.retuTe,
                            //     b_name = reserve_car_info.b_name;
                            //     // console.log('============');

                            //     // $('header').css('display','none');
                         
                            //     let deptDay = reserve_car_info.deptDay;
                            //     let retnDay = reserve_car_info.retnDay
                                // console.log('요일',deptDay);
                                // debugger;
                                // $("#payment_deptTe").text(deptTe.split(' ').join('(' + getInputDayLabel(deptDay) + ') '));
                                // $("#payment_retuTe").text(retuTe.split(' ').join('(' + getInputDayLabel(retnDay) + ') '));
                                // $("#payment_car_info").text(b_name);
                            $("#payment_deptTe").text(car_list[0].deptTe.split(' ').join('(' +JSON.parse(sessionStorage.getItem("deptTime")) + ') '));
                            $("#payment_retuTe").text(car_list[0].retuTe.split(' ').join('(' + JSON.parse(sessionStorage.getItem("returnTime")) + ') '));
                            $("#payment_car_info").text(car_list[0].b_name);

                            $('#payment').css('display','block')
                            
                        }
                    }
                });
            }
            
        }

        function getInputDayLabel(date) {
            var week = new Array('일', '월', '화', '수', '목', '금', '토');
            // var today = new Date(date).getDay();
            // var todayLabel = week[today];
            // return todayLabel;
            var todayLabel = week[date-1];
            return todayLabel;
        }

        //취소 버튼
        function payBack(){
            $('#pay_type').val('null');
            $('footer').css('z-index','');
            $('header').css('z-index','');
            $('.layer').css('z-index','')
            $('.inner_sub_wrap').css('display','block')
            // $('header').css('display','block');
            $('#payment').css('display','none')
            // $('footer').css('display','block');
            let pay_check = sessionStorage.getItem('pay_complete');
            let ct_id = sessionStorage.getItem("ct_id");
            $.ajax({
                url : '/api/temporary_seat_delete',
                method : 'delete',
                dataType : 'JSON',
                data : {
                    "seatNums": selected_seats,
                    "ct_id": ct_id,
                    "pay_check" : pay_check,
                    "user_id" : user_id,
                },
                success: function(res){
                    // console.log('res!',res);
                }					
            });
        }



        function processPayment() {
            if(sessionStorage.getItem('isTest') === null ){
                let origin_price = $("#original_price").data('price');
                // let sale_price = $("#sale_price").data('price');
                let sale_price = 0;
                let ct_id = sessionStorage.getItem("ct_id");
                let seatPrice = sessionStorage.getItem("seatPrice")
                let cancel_type = $('#pay_type option:selected').val(); // 결제수단
                if($("#pay_type option:selected").attr('value') == 'null'){
                    alert('결제수단을 선택해 주세요.');
                    return false;
                }else{
                    $.ajax({
                        method: "POST",
                        dataType: "json",
                        url: "/api/payment",
                        data: {
                            "seatNums": selected_seats,
                            "oPrice": origin_price,
                            "sPrice": sale_price,
                            "ct_id": ct_id,
                            "user_id" : user_id,
                            "payType" : '무료예매',
                            "cancel_type" : cancel_type
                        }
                    }).done((result) => {
                        $('#payment').css('display','none');
                        if(result.data == 0){
                            swal({
                                title: '예매 실패',
                                text: result.seats+' 좌석이 매진입니다. 다른 좌석을 이용해 주세요.',
                                icon: 'error',
                                button: '확인'
                            }).then(function(){
                                location.href = "/reservation2";
                            })
                        }
                        else if(result.data == 500){
                            swal({
                                title: '예매 실패',
                                text: '선택하신 버스는 이미 출발하였습니다. 다른 버스를 이용해 주세요.',
                                icon: 'error',
                                button: '확인'
                            }).then(function(){
                                location.href = "/reservation2";
                            })
                        }
                        else{
                            let car_list = JSON.parse(sessionStorage.getItem("car_list")),
                            ct_id = sessionStorage.getItem("ct_id");

                            // let bus_text1 = car_list[0].startDay+'(' +getInputDayLabel(car_list[0].deptDay)+') ';
                            let bus_text1 = car_list[0].startDay+'(' +JSON.parse(sessionStorage.getItem("deptTime"))+') ';
                            let bus_text2 = '평택 '+car_list[0].startTime+' - '+'동대문 '+car_list[0].returnTime + ' ';

                            // let payment_result = car_list.find((k) => (k.ctID == ct_id));
                            let payment_result = JSON.parse(sessionStorage.getItem("car_list"))[0];

                            payment_result.price = $('#selected_seats_price').text().trim();
                            payment_result.seat = $('#selected_seats_num').text().trim();
                            payment_result.ph_type = result.ph_type;
                            payment_result.start_day = bus_text1 + bus_text2;
                            
                            sessionStorage.setItem("payment_result", JSON.stringify(payment_result));
                            location.href = "/complete";
                        }
                    });
                }

            //결제 테스트용
            }else{
                let origin_price = $("#original_price").data('price');
                // let sale_price = $("#sale_price").data('price');
                let sale_price = 0;
                let ct_id = sessionStorage.getItem("ct_id");
                let seatPrice = sessionStorage.getItem("seatPrice")
                // location.href='/pay_test';
                if($("#pay_type option:selected").attr('value') == 'null'){
                    alert('결제수단을 선택해 주세요.');
                    return false;
                }else{
                    $.ajax({
                        url : '/api/temporary_seat',
                        method : 'post',
                        dataType : 'JSON',
                        data : {
                            "seatNums": selected_seats,
                            "ct_id": ct_id,
                            "user_id" : user_id
                            },
                        success: function(res){
                            if(res.data != "success"){
                                swal({
                                    title: '예매 실패',
                                    text: '선택하신 좌석은 다른 고객이 예매하였습니다 다른 좌석을 선택해 주세요.',
                                    icon: 'error',
                                    button: '확인'
                                }).then(function(){
                                    location.reload();
                                })
                            }else{
                                let ph_price = Number(sessionStorage.getItem('seat_price')) * $('#selected_seats_cnt').text();
                                // 결제요청 함수
                                innopay.goPay({
                                    //// 필수 파라미터
                                    PayMethod: $("#pay_type option:selected").attr('value'),		// 결제수단(CARD,BANK,VBANK,CARS,CSMS,DSMS,EPAY)
                                    MID: "testpay01m",							// 가맹점 MID
                                    MerchantKey: "Ma29gyAFhvv/+e4/AHpV6pISQIvSKziLIbrNoXPbRS5nfTx2DOs8OJve+NzwyoaQ8p9Uy1AN4S1I0Um5v7oNUg==",	// 가맹점 라이센스키
                                    GoodsName: "장차 좌석",		            // 상품명
                                    Amt: ph_price.toString(),							    // 결제금액(과세)
                                    BuyerName: user_name,		            // 고객명
                                    BuyerTel: "01012341234",				// 고객전화번호
                                    BuyerEmail: "email@eamil",			    // 고객이메일
                                    ResultYN: "Y",				            // 결제결과창 출력유뮤
                                    Moid:'testpay01m01234567890',			// 가맹점에서 생성한 주문번호 셋팅

                                    //// 선택 파라미터
                                    // ReturnURL:frm.ReturnURL.value,		// 결제결과 전송 URL(없는 경우 아래 innopay_result 함수에 결제결과가 전송됨)
                                    //ArsConnType:'02', 					//* ARS 결제 연동시 필수 01:호전환, 02(가상번호), 03:대표번호 */

                                    //FORWARD:'',							/ 결제창 연동방식 (X:레이어, 기본값)
                                    //GoodsCnt:'',							/ 상품갯수 (가맹점 참고용)
                                    //MallReserved:'',						/ 가맹점 데이터
                                    //OfferingPeriod:'',					// 제공기간
                                    //DutyFreeAmt:'',						// 결제금액(복합과세/면세 가맹점의 경우 금액설정)
                                    //EncodingType:'utf-8',					// 가맹점 서버 인코딩 타입 (utf-8, euc-kr)
                                    //MallIP:'',							// 가맹점 서버 IP
                                    //UserIP:'',							// 고객 PC IP
                                    //mallUserID:'',						// 가맹점 고객ID
                                    //User_ID:'',							// Innopay에 등록된 영업사원ID
                                    Currency:''								// 통화코드가 원화가 아닌 경우만 사용(KRW/USD)
                                });
                            }

                        }					
                    });
                }
            }
           
        }


        //결제 리턴값
        function innopay_result(data){
            
            var a = JSON.stringify(data);
            // Sample
            let mid = data.MID;					// 가맹점 MID
            let tid = data.TID;					// 거래고유번호 DB입력
            let amt = data.Amt;					// 금액
            let moid = data.MOID;				// 주문번호
            let authdate = data.AuthDate;		// 승인일자
            let authcode = data.AuthCode;		// 승인번호
            let resultcode = data.ResultCode;	// 결과코드(PG)
            let resultmsg = data.ResultMsg;		// 결과메세지(PG)
            let errorcode = data.ErrorCode;		// 에러코드(상위기관)
            let errormsg = data.ErrorMsg;		// 에러메세지(상위기관)

            let EPayCl   = data.EPayCl;
            let payType = data.AcquCardCode;    // 매입사 코드 (카드사 별 코드)
            let cancel_type = $('#pay_type option:selected').val(); // 결제수단

            let EPayType; //간편결제 종류

            //카드사명
            let card_name = 'null';
            if(data.fn_name){
                card_name = data.fn_name;
            }
            //은행사명 ( 무통장 입금 )
            let bank_name = "null";
            if(data.VbankName){
                bank_name = data.VbankName;
            }
            //가상계좌번호
            let bank_number = 'null';
            if(data.VbankNum){
                bank_number = data.VbankNum;
            }

            let origin_price = $("#original_price").data('price');
            let sale_price = 0;
            let ct_id = sessionStorage.getItem("ct_id");

            if(EPayCl == '01'){
                EPayType = '카카오페이'
            }else if(EPayCl == '02'){
                EPayType = 'LPay'
            }else if(EPayCl == '03'){
                EPayType = 'Payco'
            }else if(EPayCl == '04'){
                EPayType = 'SSGPay'
            }else if(EPayCl == '06'){
                EPayType = '네이버페이'
            }


            if(resultcode == '3001'){
                sessionStorage.setItem('pay_complete',"complete");
                $.ajax({
                    method: "POST",
                    dataType: "json",
                    url: "/api/payment",
                    data: {
                        "seatNums": selected_seats,
                        "oPrice": origin_price,
                        "sPrice": sale_price,
                        "ct_id": ct_id,
                        "tid" : tid,
                        "payType" : payType,
                        "user_id" : user_id,
                        "cancel_type" : cancel_type,
                        "EPayType" : EPayType,
                        "card_name" : card_name
                    }
                }).done((result) => {
                    $('#payment').css('display','none');
                    if(result.data == 0){
                        swal({
                            title: '예매 실패',
                            text: result.seats+' 좌석이 매진입니다. 다른 좌석을 이용해 주세요.',
                            icon: 'error',
                            button: '확인'
                        }).then(function(){
                            processCancel();
                            location.href = "/reservation2";
                        })
                    }
                    else if(result.data == 500){
                        swal({
                            title: '예매 실패',
                            text: '선택하신 버스는 이미 출발하였습니다. 다른 버스를 이용해 주세요.',
                            icon: 'error',
                            button: '확인'
                        }).then(function(){
                            processCancel();
                            location.href = "/reservation2";
                        })
                    }
                    
                    else{
                        let car_list = JSON.parse(sessionStorage.getItem("car_list")),
                        ct_id = sessionStorage.getItem("ct_id");

                        // let bus_text1 = car_list[0].startDay+'(' +getInputDayLabel(car_list[0].deptDay)+') ';
                        let bus_text1 = car_list[0].startDay+'(' +JSON.parse(sessionStorage.getItem("deptTime"))+') ';
                        let bus_text2 = '평택 '+car_list[0].startTime+' - '+'동대문 '+car_list[0].returnTime + ' ';

                        // let payment_result = car_list.find((k) => (k.ctID == ct_id));
                        let payment_result = car_list[0];
                        payment_result.price = $('#selected_seats_price').text().trim();
                        payment_result.seat = $('#selected_seats_num').text().trim();
                        payment_result.ph_type = result.ph_type;
                        payment_result.start_day = bus_text1 + bus_text2;
                        
                        sessionStorage.setItem("payment_result", JSON.stringify(payment_result));
                        location.href = "/complete";
                    }
                });

            //무통장입금 일때
            }else if(resultcode == '4100'){
                sessionStorage.setItem('pay_complete',"complete");
                // alert('에이작스')
                $.ajax({
                    method: "POST",
                    dataType: "json",
                    url: "/api/payment",
                    data: {
                        "seatNums": selected_seats,
                        "oPrice": origin_price,
                        "sPrice": sale_price,
                        "ct_id": ct_id,
                        "tid" : tid,
                        "payType" : payType,
                        "user_id" : user_id,
                        "cancel_type" : cancel_type,
                        "EPayType" : EPayType,
                        "bank_name" : bank_name,
                        "bank_number" : bank_number
                    }
                }).done((result) => {
                    $('#payment').css('display','none');
                    let car_list = JSON.parse(sessionStorage.getItem("car_list")),
                    ct_id = sessionStorage.getItem("ct_id");

                    // let bus_text1 = car_list[0].startDay+'(' +getInputDayLabel(car_list[0].deptTe)+') ';
                    let bus_text1 = car_list[0].startDay+'(' +JSON.parse(sessionStorage.getItem("deptTime"))+') ';
                    let bus_text2 = '평택 '+car_list[0].startTime+' - '+'동대문 '+car_list[0].returnTime + ' ';

                    // let payment_result = car_list.find((k) => (k.ctID == ct_id));
                    let payment_result = car_list[0];
                    payment_result.price = $('#selected_seats_price').text().trim();
                    payment_result.seat = $('#selected_seats_num').text().trim();
                    payment_result.ph_type = result.ph_type;
                    payment_result.start_day = bus_text1 + bus_text2;
                    
                    sessionStorage.setItem("payment_result", JSON.stringify(payment_result));
                    swal({
                        title: '무통장 입금',
                        text: '금일 내에 입금이 완료되지 않으면 예매는 자동적으로 취소됩니다.',
                        icon: 'success',
                        button: '확인'
                    }).then(function(){
                        // processCancel();
                        location.href = "/complete";
                    })
                });
            //계좌 이체 일때
            }else if(resultcode == '4000'){
                sessionStorage.setItem('pay_complete',"complete");
                console.log('data',data.VbankName, data.VbankNum);
                // alert('에이작스')
                $.ajax({
                    method: "POST",
                    dataType: "json",
                    url: "/api/payment",
                    data: {
                        "seatNums": selected_seats,
                        "oPrice": origin_price,
                        "sPrice": sale_price,
                        "ct_id": ct_id,
                        "tid" : tid,
                        "payType" : payType,
                        "user_id" : user_id,
                        "cancel_type" : cancel_type,
                        "EPayType" : EPayType,
                        "bank_name" : bank_name
                    }
                }).done((result) => {
                    $('#payment').css('display','none');
                    let car_list = JSON.parse(sessionStorage.getItem("car_list")),
                    ct_id = sessionStorage.getItem("ct_id");

                    // let bus_text1 = car_list[0].startDay+'(' +getInputDayLabel(car_list[0].deptTe)+') ';
                    let bus_text1 = car_list[0].startDay+'(' +JSON.parse(sessionStorage.getItem("deptTime"))+') ';
                    let bus_text2 = '평택 '+car_list[0].startTime+' - '+'동대문 '+car_list[0].returnTime + ' ';

                    // let payment_result = car_list.find((k) => (k.ctID == ct_id));
                    let payment_result = car_list[0];
                    payment_result.price = $('#selected_seats_price').text().trim();
                    payment_result.seat = $('#selected_seats_num').text().trim();
                    payment_result.ph_type = result.ph_type;
                    payment_result.start_day = bus_text1 + bus_text2;
                    
                    sessionStorage.setItem("payment_result", JSON.stringify(payment_result));
                    location.href = "/complete";
                });
            }else{
                
                alert('결제가 실패되었습니다.');
                processCancel();
            }
        }


        //창 강제 종료시 임시 예약 데이터 제거

        // window.onbeforeunload = function(){
        //     payBack();
        // }
        window.onpageshow = function (event) {
            if (event.persisted) {
                payBack();
            }
            else {
                iosSeatDelete();
                // 새로운 페이지 로드 시
            }
        }

        function iosSeatDelete(){
            let ssesion_id = "<%=sessionUser.U_ID%>";
            
            $.ajax({
                url : '/api/temporary_seat_delete_ios',
                method : 'delete',
                dataType : 'json',
                data : {'user_id' : ssesion_id},
                success: function(res){
                    // console.log('success');
                }					
            });
        }

        // window.addEventListener('beforeunload', function (e) {
        //     payBack();
        // }); 

    </script>




</body>

</html>