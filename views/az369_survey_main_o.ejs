<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>AZ369 보증보험 대체의향서</title>
    <link rel="stylesheet" href="/css/az369_survey_main_o.css">

    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
    <script src="//code.jquery.com/jquery.min.js"></script>
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>

    <!--자바스크립트-->
    <script src="/js/jquery-3.3.1.min.js"></script>
    <script src="/js/scrolla.jquery.min.js"></script>

    <!-- 차트 js -->
    <script src="/js/chart.min.js"></script>


    <!--폰트-->
    <link href="https://fonts.googleapis.com/css?family=Noto+Sans+KR|PT+Serif&display=swap" rel="stylesheet">

</head>

<body>

    <div class="wrap">

        <h1>임대보증금 보증보험 대체 의향서</h1>

        <div class="sub_wrap">
            <div class="main_title">
                <h2>이 의향서는 가로수길 센트롤돔 활성화 방안의 일환으로 임대인의 임대조건을 조사하여 임차인과 임대인의 매칭을 위한 기준을 만들고자 작성되었습니다. 본 의향서는 언제든지 재작성
                    가능하오니 많은 참여 바랍니다.</h2>

                <div class="title_btn">
                    <ul>
                        <li class="intro">
                            <a href="az369_survey_intro" target="_blank">보증보험이란?</a>
                        </li>

                        <li class="survey">
                            <a href="/c5">의향서 작성하기</a>
                        </li>
                    </ul>
                </div>
            </div>

            <!--폼 전체-->
            <div class="survey_select">
                <h3>조회 할 입점지역을 <strong>선택 후</strong> <br>
                    <strong>조회하기</strong>를 누르시면 <br>
                    결과확인이 가능합니다. <br><span>(다중선택 가능)</span></h3>


                <div class="tab">
                    <button class="tablinks defaultOpen" data-floor="01" onclick="openMap(event, '01')"
                        id="defaultOpen">1층</button>
                    <button class="tablinks" data-floor="02" onclick="openMap(event, '02')">2층</button>
                    <button class="tablinks" data-floor="03" onclick="openMap(event, '03')">3층</button>
                </div>

                <div id="01" class="tabcontent">

                    <svg class="map_svg" version="1.1" xmlns="http://www.w3.org/2000/svg"
                        xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 536.61 430.13"
                        style="enable-background:new 0 0 536.61 430.13;" xml:space="preserve">

                        <g id="1F">
                            <polygon class="street" points="348.55,68.72 289.94,86.6 290.81,109.65 342.55,95.72 439.55,204.72 441.54,244.59 465.53,250.05 
				463.55,192.72 	" />
                            <path class="street" d="M446.55,333.72c-2,12-13,14-13,14l-162.64-12.97l-5.6,24.01l205.24,9.96l-3.96-84.12l-23.01-5.24
				L446.55,333.72z" />
                            <path class="street" d="M264.55,358.72l0.76,0.04l5.6-24.01l-0.36-0.03l0.36,0.03l15.64-67.03c22-4,27-18,27-18l130.03,29.64
				l-0.03-0.64l0.03,0.64l23.01,5.24l-0.04-0.88l0.04,0.88l61.21,13.95l-2.35-34.85l-59.93-13.65l0.02,0.67l-0.02-0.67l-23.98-5.46
				l0.01,0.13l-0.01-0.13l-117.99-26.87c-5-28-30-36-30-36l-2.74-72.07l-0.26,0.07l0.26-0.07l-0.88-23.05l-0.39,0.12l0.39-0.12
				l-2.38-62.78l-35,9.99l2.48,62.06l0.51-0.15l-0.51,0.15l0.84,21.05l0.67-0.2l-0.67,0.2l2.67,66.8c0,0-9,3-16,14l-119.23-25.33
				c0.14,0.21,0.23,0.33,0.23,0.33s-0.09-0.12-0.23-0.33l-29.62-6.29l-0.14,0.62l0.14-0.62l-44.14-9.38l14-68.99l-43.47,12.4l-18,31
				c0,0,13.07,49.58,27.91,103.75l11.57-47.16l45.58,10.16c0.25-0.12,0.42-0.16,0.42-0.16s-0.16,0.03-0.42,0.16l30.82,6.87
				c0.19-0.01,0.39-0.02,0.59-0.02c-0.2,0-0.4,0.01-0.59,0.02l116.59,25.98c1,18,18,30,18,30l-16.83,70.94l0.83,0.06l-0.83-0.06
				l-5.46,23.04l0.29,0.02l-0.29-0.02l-14.02,59.12l35.38,3.59l13.69-58.65L264.55,358.72z" />
                            <path class="street" d="M93.69,166.09l29.62,6.29c-1.12-1.68-5.65-9.57,3.23-16.67l129.33-38.8l-0.84-21.05L99.55,140.72L93.69,166.09
				z" />
                            <path class="street" d="M84.55,210.72l38,135l107.71,8.98l5.46-23.04l-94.17-6.94l-32-110c0,0,0.95-9.49,8.41-9.98l-30.82-6.87
				C85.98,198.43,82.91,200.87,84.55,210.72z" />


                            <!--  A 라인 -->
                            <polygon class="store A1 pick" name='1fa1' data-1F="A1"
                                points="93.69,166.09 99.55,140.72 255.03,95.86 252.55,33.81 63.55,87.73 49.55,156.72 	" />

                            <path class="store A2 pick" name='1fa2' data-1F="A2" d="M123.32,172.39l119.23,25.33c7-11,16-14,16-14l-2.67-66.8l-129.33,38.8
				C117.67,162.82,122.19,170.71,123.32,172.39z" />


                            <!-- B 라인 -->
                            <polygon class="store B1 pick" name='1fb1' data-1F="B1" points="348.55,68.72 463.55,192.72 465.53,250.05 525.45,263.69 519.07,169.13 367.07,1.13 287.55,23.82 
				289.94,86.6 	" />
                            <path class="store B2 pick" name='1fb2' data-1F="B2"
                                d="M342.55,95.72l-51.74,13.93l2.74,72.07c0,0,25,8,30,36l117.99,26.87l-1.99-39.87L342.55,95.72z" />


                            <!-- C 라인 -->
                            <polygon class="store C1 pick" name='1fc1' data-1F="C1" points="536.07,421.13 527.8,298.55 466.59,284.6 470.55,368.72 265.31,358.75 251.62,417.41 367.07,429.13 	
				" />
                            <path class="store C2 pick" name='1fc2' data-1F="C2" d="M446.55,333.72l-2.97-54.36l-130.03-29.64c0,0-5,14-27,18l-15.64,67.03l162.64,12.97
				C433.55,347.72,444.55,345.72,446.55,333.72z" />



                            <!-- D 라인 -->
                            <path class="store D1 pick" name='1fd1' data-1F="D1"
                                d="M122.55,345.72l-38-135c-1.64-9.85,1.43-12.28,2.58-12.84l-45.58-10.16l-11.57,47.16
				C46.4,294.8,64.97,360.34,70.39,370.52c10.32,19.39,40.68,32.61,40.68,32.61l105.16,10.68l14.02-59.12L122.55,345.72z" />
                            <path class="store D2 pick" name='1fd2' data-1F="D2" d="M109.55,214.72l32,110l94.17,6.94l16.83-70.94c0,0-17-12-18-30l-116.59-25.98
				C110.5,205.22,109.55,214.72,109.55,214.72z" />


                            <!-- 입점지역 전체부분: 선택불가 -->
                            <path class="all" d="M366.07,1.13l152,168l17,252l-169,8l-256-26c0,0-30.37-13.23-40.68-32.61S1.07,131.13,1.07,131.13l18-31
				L366.07,1.13z" />

                        </g>
                        <!-- 입점지역 텍스트 영역 -->
                        <text transform="matrix(1 0 0 1 158.1511 93.4356)" id='1fa1' class="svg_txt">A1</text>
                        <text transform="matrix(1 0 0 1 417.656 120.4356)" id='1fb1' class="svg_txt">B1</text>
                        <text transform="matrix(1 0 0 1 352.656 188.4355)" id='1fb2' class="svg_txt">B2</text>
                        <text transform="matrix(1 0 0 1 352.8869 309.4355)" id='1fc2' class="svg_txt">C2</text>
                        <text transform="matrix(1 0 0 1 380.8869 400.4355)" id='1fc1' class="svg_txt">C1</text>
                        <text transform="matrix(1 0 0 1 100.3039 374.4355)" id='1fd1' class="svg_txt">D1</text>
                        <text transform="matrix(1 0 0 1 173.3039 276.4355)" id='1fd2' class="svg_txt">D2</text>
                        <text transform="matrix(1 0 0 1 207.1511 166.4355)" id='1fa2' class="svg_txt">A2</text>

                    </svg>
                </div>


                <div id="02" class="tabcontent">

                    <svg class="map_svg" version="1.1" xmlns="http://www.w3.org/2000/svg"
                        xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 536.61 430.13"
                        style="enable-background:new 0 0 536.61 430.13;" xml:space="preserve">


                        <!-- 거리영역 : 선택불가 -->
                        <g id="2F">
                            <polygon class="street" points="348.55,68.72 289.94,86.6 290.81,109.65 342.55,95.72 439.55,204.72 441.54,244.59 465.53,250.05 
				463.55,192.72 	" />
                            <path class="street" d="M446.55,333.72c-2,12-13,14-13,14l-162.64-12.97l-5.6,24.01l205.24,9.96l-3.96-84.12l-23.01-5.24
				L446.55,333.72z" />
                            <path class="street" d="M264.55,358.72l0.76,0.04l5.6-24.01l-0.36-0.03l0.36,0.03l15.64-67.03c22-4,27-18,27-18l130.03,29.64
				l-0.03-0.64l0.03,0.64l23.01,5.24l-0.04-0.88l0.04,0.88l61.21,13.95l-2.35-34.85l-59.93-13.65l0.02,0.67l-0.02-0.67l-23.98-5.46
				l0.01,0.13l-0.01-0.13l-117.99-26.87c-5-28-30-36-30-36l-2.74-72.07l-0.26,0.07l0.26-0.07l-0.88-23.05l-0.39,0.12l0.39-0.12
				l-2.38-62.78l-35,9.99l2.48,62.06l0.51-0.15l-0.51,0.15l0.84,21.05l0.67-0.2l-0.67,0.2l2.67,66.8c0,0-9,3-16,14l-119.23-25.33
				c0.14,0.21,0.23,0.33,0.23,0.33s-0.09-0.12-0.23-0.33l-29.62-6.29l-0.14,0.62l0.14-0.62l-44.14-9.38l14-68.99l-43.47,12.4l-18,31
				c0,0,13.07,49.58,27.91,103.75l11.57-47.16l45.58,10.16c0.25-0.12,0.42-0.16,0.42-0.16s-0.16,0.03-0.42,0.16l30.82,6.87
				c0.19-0.01,0.39-0.02,0.59-0.02c-0.2,0-0.4,0.01-0.59,0.02l116.59,25.98c1,18,18,30,18,30l-16.83,70.94l0.83,0.06l-0.83-0.06
				l-5.46,23.04l0.29,0.02l-0.29-0.02l-14.02,59.12l35.38,3.59l13.69-58.65L264.55,358.72z" />
                            <path class="street" d="M93.69,166.09l29.62,6.29c-1.12-1.68-5.65-9.57,3.23-16.67l129.33-38.8l-0.84-21.05L99.55,140.72L93.69,166.09
				z" />
                            <path class="street" d="M84.55,210.72l38,135l107.71,8.98l5.46-23.04l-94.17-6.94l-32-110c0,0,0.95-9.49,8.41-9.98l-30.82-6.87
				C85.98,198.43,82.91,200.87,84.55,210.72z" />


                            <!--  A 라인 -->
                            <polygon class="store a1 pick" name='2fa1' data-2F="A1"
                                points="93.69,166.09 99.55,140.72 255.03,95.86 252.55,33.81 63.55,87.73 49.55,156.72 	" />

                            <path class="store a2 pick" name='2fa2' data-2F="A2" d="M123.32,172.39l119.23,25.33c7-11,16-14,16-14l-2.67-66.8l-129.33,38.8
				C117.67,162.82,122.19,170.71,123.32,172.39z" />


                            <!-- B 라인 -->
                            <polygon class="store b1 pick" name='2fb1' data-2F="B1" points="348.55,68.72 463.55,192.72 465.53,250.05 525.45,263.69 519.07,169.13 367.07,1.13 287.55,23.82 
				289.94,86.6 	" />
                            <path class="store b2 pick" name='2fb2' data-2F="B2"
                                d="M342.55,95.72l-51.74,13.93l2.74,72.07c0,0,25,8,30,36l117.99,26.87l-1.99-39.87L342.55,95.72z" />


                            <!-- C 라인 -->
                            <polygon class="store c1 pick" name='2fc1' data-2F="C1" points="536.07,421.13 527.8,298.55 466.59,284.6 470.55,368.72 265.31,358.75 251.62,417.41 367.07,429.13 	
				" />
                            <path class="store c2 pick" name='2fc2' data-2F="C2" d="M446.55,333.72l-2.97-54.36l-130.03-29.64c0,0-5,14-27,18l-15.64,67.03l162.64,12.97
				C433.55,347.72,444.55,345.72,446.55,333.72z" />



                            <!-- D 라인 -->
                            <path class="store d1 pick"
                                d="M122.55,345.72l-38-135c-1.64-9.85,1.43-12.28,2.58-12.84l-45.58-10.16l-11.57,47.16
				C46.4,294.8,64.97,360.34,70.39,370.52c10.32,19.39,40.68,32.61,40.68,32.61l105.16,10.68l14.02-59.12L122.55,345.72z" />
                            <path class="store d2 pick" d="M109.55,214.72l32,110l94.17,6.94l16.83-70.94c0,0-17-12-18-30l-116.59-25.98
				C110.5,205.22,109.55,214.72,109.55,214.72z" />


                            <!-- 입점지역 전체부분: 선택불가 -->
                            <path class="all" d="M366.07,1.13l152,168l17,252l-169,8l-256-26c0,0-30.37-13.23-40.68-32.61S1.07,131.13,1.07,131.13l18-31
				L366.07,1.13z" />
                        </g>

                        <!-- 입점지역 텍스트 영역 -->
                        <text transform="matrix(1 0 0 1 158.1511 93.4356)" id='2fa1' class="svg_txt">A1</text>
                        <text transform="matrix(1 0 0 1 417.656 120.4356)" id='2fb1' class="svg_txt">B1</text>
                        <text transform="matrix(1 0 0 1 352.656 188.4355)" id='2fb2' class="svg_txt">B2</text>
                        <text transform="matrix(1 0 0 1 352.8869 309.4355)" id='2fc2' class="svg_txt">C2</text>
                        <text transform="matrix(1 0 0 1 380.8869 400.4355)" id='2fc1' class="svg_txt">C1</text>
                        <text transform="matrix(1 0 0 1 100.3039 374.4355)" id='2fd1' class="svg_txt">D1</text>
                        <text transform="matrix(1 0 0 1 173.3039 276.4355)" id='2fd2' class="svg_txt">D2</text>
                        <text transform="matrix(1 0 0 1 207.1511 166.4355)" id='2fa2' class="svg_txt">A2</text>
                    </svg>
                </div>


                <div id="03" class="tabcontent">

                    <svg class="map_svg" version="1.1" xmlns="http://www.w3.org/2000/svg"
                        xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 536.61 430.13"
                        style="enable-background:new 0 0 536.61 430.13;" xml:space="preserve">

                        <g id='3F'>
                            <!-- 거리영역 : 선택불가 -->
                            <polygon class="street" points="348.55,68.72 289.94,86.6 290.81,109.65 342.55,95.72 439.55,204.72 441.54,244.59 465.53,250.05 
				463.55,192.72 	" />
                            <path class="street" d="M446.55,333.72c-2,12-13,14-13,14l-162.64-12.97l-5.6,24.01l205.24,9.96l-3.96-84.12l-23.01-5.24
				L446.55,333.72z" />
                            <path class="street" d="M264.55,358.72l0.76,0.04l5.6-24.01l-0.36-0.03l0.36,0.03l15.64-67.03c22-4,27-18,27-18l130.03,29.64
				l-0.03-0.64l0.03,0.64l23.01,5.24l-0.04-0.88l0.04,0.88l61.21,13.95l-2.35-34.85l-59.93-13.65l0.02,0.67l-0.02-0.67l-23.98-5.46
				l0.01,0.13l-0.01-0.13l-117.99-26.87c-5-28-30-36-30-36l-2.74-72.07l-0.26,0.07l0.26-0.07l-0.88-23.05l-0.39,0.12l0.39-0.12
				l-2.38-62.78l-35,9.99l2.48,62.06l0.51-0.15l-0.51,0.15l0.84,21.05l0.67-0.2l-0.67,0.2l2.67,66.8c0,0-9,3-16,14l-119.23-25.33
				c0.14,0.21,0.23,0.33,0.23,0.33s-0.09-0.12-0.23-0.33l-29.62-6.29l-0.14,0.62l0.14-0.62l-44.14-9.38l14-68.99l-43.47,12.4l-18,31
				c0,0,13.07,49.58,27.91,103.75l11.57-47.16l45.58,10.16c0.25-0.12,0.42-0.16,0.42-0.16s-0.16,0.03-0.42,0.16l30.82,6.87
				c0.19-0.01,0.39-0.02,0.59-0.02c-0.2,0-0.4,0.01-0.59,0.02l116.59,25.98c1,18,18,30,18,30l-16.83,70.94l0.83,0.06l-0.83-0.06
				l-5.46,23.04l0.29,0.02l-0.29-0.02l-14.02,59.12l35.38,3.59l13.69-58.65L264.55,358.72z" />
                            <path class="street" d="M93.69,166.09l29.62,6.29c-1.12-1.68-5.65-9.57,3.23-16.67l129.33-38.8l-0.84-21.05L99.55,140.72L93.69,166.09
				z" />
                            <path class="street" d="M84.55,210.72l38,135l107.71,8.98l5.46-23.04l-94.17-6.94l-32-110c0,0,0.95-9.49,8.41-9.98l-30.82-6.87
				C85.98,198.43,82.91,200.87,84.55,210.72z" />


                            <!--  A 라인 -->
                            <polygon class="store a1 pick" name='3fa1' data-3F="A1"
                                points="93.69,166.09 99.55,140.72 255.03,95.86 252.55,33.81 63.55,87.73 49.55,156.72 	" />

                            <path class="store a2 pick" name='3fa2' data-3F="A2" d="M123.32,172.39l119.23,25.33c7-11,16-14,16-14l-2.67-66.8l-129.33,38.8
				C117.67,162.82,122.19,170.71,123.32,172.39z" />


                            <!-- B 라인 -->
                            <polygon class="store b1 pick" name='3fb1' data-3F="B1" points="348.55,68.72 463.55,192.72 465.53,250.05 525.45,263.69 519.07,169.13 367.07,1.13 287.55,23.82 
				289.94,86.6 	" />
                            <path class="store b2 pick" name='3fb2' data-3F="B2"
                                d="M342.55,95.72l-51.74,13.93l2.74,72.07c0,0,25,8,30,36l117.99,26.87l-1.99-39.87L342.55,95.72z" />


                            <!-- C 라인 -->
                            <polygon class="store c1 pick" name='3fc1' data-3F="C1" points="536.07,421.13 527.8,298.55 466.59,284.6 470.55,368.72 265.31,358.75 251.62,417.41 367.07,429.13 	
				" />
                            <path class="store c2 pick" name='3fc2' data-3F="C2" d="M446.55,333.72l-2.97-54.36l-130.03-29.64c0,0-5,14-27,18l-15.64,67.03l162.64,12.97
				C433.55,347.72,444.55,345.72,446.55,333.72z" />



                            <!-- D 라인 -->
                            <path class="store d1 pick" name='3fd1' data-3F="D1"
                                d="M122.55,345.72l-38-135c-1.64-9.85,1.43-12.28,2.58-12.84l-45.58-10.16l-11.57,47.16
				C46.4,294.8,64.97,360.34,70.39,370.52c10.32,19.39,40.68,32.61,40.68,32.61l105.16,10.68l14.02-59.12L122.55,345.72z" />
                            <path class="store d2 pick" name='3fd2' data-3F="D2" d="M109.55,214.72l32,110l94.17,6.94l16.83-70.94c0,0-17-12-18-30l-116.59-25.98
				C110.5,205.22,109.55,214.72,109.55,214.72z" />


                            <!-- 입점지역 전체부분: 선택불가 -->
                            <path class="all" d="M366.07,1.13l152,168l17,252l-169,8l-256-26c0,0-30.37-13.23-40.68-32.61S1.07,131.13,1.07,131.13l18-31
				L366.07,1.13z" />


                            <!-- 입점지역 텍스트 영역 -->
                            <text transform="matrix(1 0 0 1 158.1511 93.4356)" id='3fa1' class="svg_txt">A1</text>
                            <text transform="matrix(1 0 0 1 417.656 120.4356)" id='3fb1' class="svg_txt">B1</text>
                            <text transform="matrix(1 0 0 1 352.656 188.4355)" id='3fb2' class="svg_txt">B2</text>
                            <text transform="matrix(1 0 0 1 352.8869 309.4355)" id='3fc2' class="svg_txt">C2</text>
                            <text transform="matrix(1 0 0 1 380.8869 400.4355)" id='3fc1' class="svg_txt">C1</text>
                            <text transform="matrix(1 0 0 1 100.3039 374.4355)" id='3fd1' class="svg_txt">D1</text>
                            <text transform="matrix(1 0 0 1 173.3039 276.4355)" id='3fd2' class="svg_txt">D2</text>
                            <text transform="matrix(1 0 0 1 207.1511 166.4355)" id='3fa2' class="svg_txt">A2</text>
                        </g>
                    </svg>
                </div>


                <div class="survey_select_btn">
                    <ul>
                        <li>
                            <button class="all_pick" onclick="all(event, '01')">전체선택</button>
                        </li>
                        <li>
                            <button class="no_pick" id='cancelClick'>전체취소</button>
                        </li>
                    </ul>
                </div>

                <div class="button_bar"></div>


                <div id="lookUp">조회하기</div>

                <!-- 조회하기 팝업 모달 -->
                <div id="myModal" class="modal">

                    <!-- 팝업 내부 -->
                    <div class="modal-content">
                        <div class="modal_header"><span class="close">&times;</span></div>
                        <div class="modal_inner">
                            <h3>선택하신 입점지역에 대한 <br> <strong>조회결과</strong>입니다. <br>
                                <span>(조회일로부터 <br> 6개월까지 조회가능)</span></h3>
                            <div class="bar"></div>


                            <div class="period">
                                <ul>
                                    <li>
                                        <div class="custom-select">
                                            <select id="custom-select">
                                                <option value="2020" selected>2020</option>
                                                <option value="2020">2020</option>
                                            </select>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="period_btn">
                                            <ul>
                                                <li><button type='button' id='first' class='selected'>상반기</button></li>
                                                <li><button type="button" id='second'>하반기</button></li>
                                            </ul>
                                        </div>
                                    </li>
                                </ul>
                            </div>

                            <div class="chart_list">
                                <h4><span>적정</span> 임대료</h4>
                                <!-- <span class="head_label" style="color: #269FAF;">전체최대의 평균 : </span><span
                                    id='maxMaxAvg'></span>
                                <span class="head_label" style="color: #454E5C;">전체최소의 평균 : </span><span
                                    id='maxMinAvg'></span>
                                <span class="head_label" style="color: #D69D12;">전체평균의 평균 : </span><span
                                    id='maxAvgAvg'></span> -->
                                <div class="chart">
                                    <canvas id="chart01" width="100%" height="100%" chart-click='ctrl.onClick'></canvas>
                                </div>

                                <h4><span>최저</span> 임대료</h4>
                                <!-- <span class="head_label" style="color: #269FAF;">전체최대의 평균 : </span><span
                                    id='minMaxAvg'></span>
                                <span class="head_label" style="color: #454E5C;">전체최소의 평균 : </span><span
                                    id='minMinAvg'></span>
                                <span class="head_label" style="color: #D69D12;">전체평균의 평균 : </span><span
                                    id='minAvgAvg'></span> -->
                                <div class="chart">
                                    <canvas id="chart02" width="100%" height="100%"></canvas>
                                </div>
                            </div>

                        </div>
                    </div>




                </div>
            </div>
        </div>

        <script>
            //평균값
            function average(list) {
                if (list.length == 0) list = [0];
                var sum = 0, length = 0;
                for (var i = 0; i < list.length; i++) {
                    sum = sum + list[i];
                    if (list[i] > 0) length++;
                }
                // 소수점 1자리 반올림 및
                let result = (sum / ((length == 0) ? length + 1 : length));
                result = result.toFixed(1);
                result = (result.substr(-1) == "0") ? result.split(".")[0] : result;
                return Number(result);
            }

            //최소값
            function min(list) {
                if (list.length == 0) list = [0];
                return Math.min.apply(null, list)
            }

            //최대값
            function max(list) {
                if (list.length == 0) list = [0];
                return Math.max.apply(null, list)
            }

            var SurveyChart = function () {
                this.max_instance = '', // Max Chart Instance
                    this.min_instance = '', // Min Chart Instance
                    this.data = {
                        first_half: {
                            label: ['1월', '2월', '3월', '4월', '5월', '6월'],
                            max: {
                                min: [],
                                avg: [],
                                max: [],
                                min_avg: [],
                                avg_avg: [],
                                max_avg: []
                            },
                            min: {
                                min: [],
                                avg: [],
                                max: [],
                                min_avg: [],
                                avg_avg: [],
                                max_avg: []
                            }
                        },
                        second_half: {
                            label: ['7월', '8월', '9월', '10월', '11월', '12월'],
                            max: {
                                min: [],
                                avg: [],
                                max: [],
                                min_avg: [],
                                avg_avg: [],
                                max_avg: []
                            },
                            min: {
                                min: [],
                                avg: [],
                                max: [],
                                min_avg: [],
                                avg_avg: [],
                                max_avg: []
                            }
                        }
                    },
                    this.getOptions = function (half_type = 'first_half', chart_type = 'max') {
                        return {
                            type: 'bar',
                            data: {
                                labels: this.data.first_half.label,
                                datasets: [{
                                    label: "최저의 평균",
                                    type: "line",
                                    borderColor: 'rgba(69, 78, 92, 0.7)',
                                    pointBackgroundColor: 'rgba(69, 78, 92, 1)',
                                    borderWidth: 2,
                                    lineTension: 0,
                                    fillText : true,
                                    fillTextLocation : 5,
                                    /*곡선제거*/
                                    data: this.data[half_type][chart_type].min_avg,
                                    scaleBeginAtZero: true,
                                    fill: false
                                }, {
                                    label: "최대의 평균",
                                    type: "line",
                                    borderColor: 'rgba(38, 159, 175, 0.7)',
                                    pointBackgroundColor: 'rgba(38, 159, 175, 1)',
                                    borderWidth: 2,
                                    fillText : true,
                                    fillTextLocation : 5,
                                    lineTension: 0,
                                    data: this.data[half_type][chart_type].max_avg,
                                    fill: false
                                }, {
                                    label: "평균의 평균",
                                    type: "line",
                                    borderWidth: 2,
                                    lineTension: 0,
                                    fillText : true,
                                    fillTextLocation : 5,
                                    borderColor: 'rgba(214, 157, 18, 0.7)',
                                    pointBackgroundColor: 'rgba(214, 157, 18, 1)',
                                    data: this.data[half_type][chart_type].avg_avg,
                                    fill: false
                                }, {
                                    label: "최저",
                                    type: "bar",
                                    scaleBeginAtZero: true,
                                    backgroundColor: 'rgba(69, 78, 92, 0.3)',
                                    backgroundColorHover: 'rgba(69, 78, 92, 0.5)',
                                    data: this.data[half_type][chart_type].min,
                                    barPercentage: 0.6
                                }, {
                                    label: "최대",
                                    type: "bar",
                                    scaleBeginAtZero: true,
                                    backgroundColor: 'rgba(38, 159, 175, 0.3)',
                                    backgroundColorHover: 'rgba(38, 159, 175, 0.5)',
                                    data: this.data[half_type][chart_type].max,
                                    barPercentage: 0.6
                                }, {
                                    label: "평균",
                                    type: "bar",
                                    scaleBeginAtZero: true,
                                    backgroundColor: 'rgba(214, 157, 18, 0.3)',
                                    backgroundColorHover: 'rgba(214, 157, 18, 0.5)',
                                    data: this.data[half_type][chart_type].avg,
                                    barPercentage: 0.6
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                legend: {
                                    labels: {
                                        boxWidth: 12,
                                        padding: 15,
                                    }
                                },
                                tooltips: {
                                    
                                    callbacks: {
                                        label: function (tooltipItem, data) {
                                            let label = data.datasets[tooltipItem.datasetIndex].label;
                                            return label+": "+tooltipItem.yLabel;
                                        }
                                    },
                                    filter : function (tooltipItem) {
                                        // 3,4,5 번째 dataset 만 tootip에 노출
                                        return [3,4,5].includes(tooltipItem.datasetIndex);
                                    },
                                    mode: 'index',
                                    intersect: true,
                                    titleFontSize: 18,
                                    titleFontStyle: 500,
                                    titleMarginBottom: 8,
                                    bodyFontSize: 15,
                                    bodyFontStyle: 300,
                                    xPadding: 10,
                                    yPadding: 10
                                },
                                scales: {
                                    xAxes: [{
                                        gridLines: {
                                            color: "rgba(150, 150, 150, 0.1)",
                                        }
                                    }],
                                    yAxes: [{
                                        ticks: {
                                            reverse: false,
                                            suggestedMin: 0,
                                            /*y축 0부터 시작*/
                                            suggestedMax: 60,
                                            /*y축 맥스값*/
                                            maxTicksLimit: 10
                                        },
                                        gridLines: {
                                            color: "rgba(150, 150, 150, 0.1)",
                                        }
                                    }]
                                },
                                elements: {
                                    point: {
                                        radius: 0
                                    }
                                },
                                animation: {
                                    duration : 500,
                                    onComplete : function () {
                                        var chartInstance = this.chart,
                                            ctx = chartInstance.ctx;
                                        // ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                                        // ctx.textAlign = 'center';
                                        // ctx.textBaseline = 'bottom';

                                        this.data.datasets.forEach(function (dataset, i) {
                                            if( dataset.fillText ){
                                                let meta = chartInstance.controller.getDatasetMeta(i);
                                                if( dataset.fillTextLocation !== undefined && dataset.fillTextLocation != NaN ){
                                                    let data = dataset.data[dataset.fillTextLocation];
                                                    let chartNode = meta.data[dataset.fillTextLocation];
                                                    ctx.fillText(data, chartNode._model.x - 10, chartNode._model.y - 10);
                                                } else {
                                                    meta.data.forEach(function (chartNode, index) {
                                                        var data = dataset.data[index];
                                                        ctx.fillText(data, chartNode._model.x, chartNode._model.y - 5);
                                                    });
                                                }
                                            }
                                        });
                                    }
                                }
                            }
                        }
                    },
                    this.getData = function () {
                        let rentalMin1 = [];
                        let rentalMin2 = [];
                        let rentalMin3 = [];
                        let rentalMin4 = [];
                        let rentalMin5 = [];
                        let rentalMin6 = [];
                        let rentalMin7 = [];
                        let rentalMin8 = [];
                        let rentalMin9 = [];
                        let rentalMin10 = [];
                        let rentalMin11 = [];
                        let rentalMin12 = [];

                        let rentalMax1 = [];
                        let rentalMax2 = [];
                        let rentalMax3 = [];
                        let rentalMax4 = [];
                        let rentalMax5 = [];
                        let rentalMax6 = [];
                        let rentalMax7 = [];
                        let rentalMax8 = [];
                        let rentalMax9 = [];
                        let rentalMax10 = [];
                        let rentalMax11 = [];
                        let rentalMax12 = [];

                        let chartData = {
                            '1F': $('#1F .clicked').map((i, data) => data.dataset['1f']).toArray(),
                            '2F': $('#2F .clicked').map((i, data) => data.dataset['2f']).toArray(),
                            '3F': $('#3F .clicked').map((i, data) => data.dataset['3f']).toArray()
                        }

                        let half = $.ajax({
                            url: '/c4/chart',
                            method: 'post',
                            dataType: 'json',
                            async: false,
                            data: chartData,
                            success: function (res) {
                                for (let i = 0; i < res.data.length; i++) {
                                    if (res.data[i].day == '01월') {
                                        rentalMin1.push(res.data[i].LSV_wRentalFeeMin)
                                        rentalMax1.push(res.data[i].LSV_wRentalFeeMax)
                                    } else if (res.data[i].day == '02월') {
                                        rentalMin2.push(res.data[i].LSV_wRentalFeeMin)
                                        rentalMax2.push(res.data[i].LSV_wRentalFeeMax)
                                    } else if (res.data[i].day == '03월') {
                                        rentalMin3.push(res.data[i].LSV_wRentalFeeMin)
                                        rentalMax3.push(res.data[i].LSV_wRentalFeeMax)
                                    } else if (res.data[i].day == '04월') {
                                        rentalMin4.push(res.data[i].LSV_wRentalFeeMin)
                                        rentalMax4.push(res.data[i].LSV_wRentalFeeMax)
                                    } else if (res.data[i].day == '05월') {
                                        rentalMin5.push(res.data[i].LSV_wRentalFeeMin)
                                        rentalMax5.push(res.data[i].LSV_wRentalFeeMax)
                                    } else if (res.data[i].day == '06월') {
                                        rentalMin6.push(res.data[i].LSV_wRentalFeeMin)
                                        rentalMax6.push(res.data[i].LSV_wRentalFeeMax)
                                    } else if (res.data[i].day == '07월') {
                                        rentalMin7.push(res.data[i].LSV_wRentalFeeMin)
                                        rentalMax7.push(res.data[i].LSV_wRentalFeeMax)
                                    } else if (res.data[i].day == '08월') {
                                        rentalMin8.push(res.data[i].LSV_wRentalFeeMin)
                                        rentalMax8.push(res.data[i].LSV_wRentalFeeMax)
                                    } else if (res.data[i].day == '09월') {
                                        rentalMin9.push(res.data[i].LSV_wRentalFeeMin)
                                        rentalMax9.push(res.data[i].LSV_wRentalFeeMax)
                                    } else if (res.data[i].day == '10월') {
                                        rentalMin10.push(res.data[i].LSV_wRentalFeeMin)
                                        rentalMax10.push(res.data[i].LSV_wRentalFeeMax)
                                    } else if (res.data[i].day == '11월') {
                                        rentalMin11.push(res.data[i].LSV_wRentalFeeMin)
                                        rentalMax11.push(res.data[i].LSV_wRentalFeeMax)
                                    } else if (res.data[i].day == '12월') {
                                        rentalMin12.push(res.data[i].LSV_wRentalFeeMin)
                                        rentalMax12.push(res.data[i].LSV_wRentalFeeMax)
                                    }
                                }
                            }
                        });
                        let temp_array = Array(6);
                        // 적정 임대료
                        // 상반기 월별 데이터
                        this.data.first_half.max.max = [max(rentalMax1), max(rentalMax2), max(rentalMax3), max(rentalMax4), max(rentalMax5), max(rentalMax6)] //전체 최대값
                        this.data.first_half.max.min = [min(rentalMax1), min(rentalMax2), min(rentalMax3), min(rentalMax4), min(rentalMax5), min(rentalMax6)] //전체 최소값
                        this.data.first_half.max.avg = [average(rentalMax1), average(rentalMax2), average(rentalMax3), average(rentalMax4), average(rentalMax5), average(rentalMax6)] //전체 평균값

                        // 상반기 평균 값
                        this.data.first_half.max.max_avg = temp_array.fill(average(this.data.first_half.max.max)).concat();
                        this.data.first_half.max.min_avg = temp_array.fill(average(this.data.first_half.max.min)).concat();
                        this.data.first_half.max.avg_avg = temp_array.fill(average(this.data.first_half.max.avg)).concat();

                        // 하반기 월별 데이터
                        this.data.second_half.max.max = [max(rentalMax7), max(rentalMax8), max(rentalMax9), max(rentalMax10), max(rentalMax11), max(rentalMax12)] //전체 최대값
                        this.data.second_half.max.min = [min(rentalMax7), min(rentalMax8), min(rentalMax9), min(rentalMax10), min(rentalMax11), min(rentalMax12)] //전체 최소값
                        this.data.second_half.max.avg = [average(rentalMax7), average(rentalMax8), average(rentalMax9), average(rentalMax10), average(rentalMax11), average(rentalMax12)] //전체 평균값
                        // 하반기 평균 값
                        this.data.second_half.max.max_avg = temp_array.fill(average(this.data.second_half.max.max)).concat();
                        this.data.second_half.max.min_avg = temp_array.fill(average(this.data.second_half.max.min)).concat();
                        this.data.second_half.max.avg_avg = temp_array.fill(average(this.data.second_half.max.avg)).concat();

                        //최저 임대료
                        // 상반기 월별 데이터
                        this.data.first_half.min.max = [max(rentalMin1), max(rentalMin2), max(rentalMin3), max(rentalMin4), max(rentalMin5), max(rentalMin6)] //전체 최대값
                        this.data.first_half.min.min = [min(rentalMin1), min(rentalMin2), min(rentalMin3), min(rentalMin4), min(rentalMin5), min(rentalMin6)] //전체 최소값
                        this.data.first_half.min.avg = [average(rentalMin1), average(rentalMin2), average(rentalMin3), average(rentalMin4), average(rentalMin5), average(rentalMin6)] //전체 평균값
                        // 상반기 평균 값
                        this.data.first_half.min.max_avg = temp_array.fill(average(this.data.first_half.min.max)).concat();
                        this.data.first_half.min.min_avg = temp_array.fill(average(this.data.first_half.min.min)).concat();
                        this.data.first_half.min.avg_avg = temp_array.fill(average(this.data.first_half.min.avg)).concat();

                        // 하반기 월별 데이터
                        this.data.second_half.min.max = [max(rentalMin7), max(rentalMin8), max(rentalMin9), max(rentalMin10), max(rentalMin11), max(rentalMin12)] //전체 최대값
                        this.data.second_half.min.min = [min(rentalMin7), min(rentalMin8), min(rentalMin9), min(rentalMin10), min(rentalMin11), min(rentalMin12)] //전체 최소값
                        this.data.second_half.min.avg = [average(rentalMin7), average(rentalMin8), average(rentalMin9), average(rentalMin10), average(rentalMin11), average(rentalMin12)] //전체 평균값
                        // 하반기 평균 값
                        this.data.second_half.min.max_avg = temp_array.fill(average(this.data.second_half.min.max)).concat();
                        this.data.second_half.min.min_avg = temp_array.fill(average(this.data.second_half.min.min)).concat();
                        this.data.second_half.min.avg_avg = temp_array.fill(average(this.data.second_half.min.avg)).concat();
                    },
                    this.render = function (half_type = 'first_half') {
                        if (this.max_instance.destroy) this.max_instance.destroy();
                        if (this.min_instance.destroy) this.min_instance.destroy();
                        var ctx1 = document.getElementById('chart01').getContext('2d');
                        var ctx2 = document.getElementById('chart02').getContext('2d');
                        this.max_instance = new Chart(ctx1, this.getOptions(half_type, 'max'));
                        this.min_instance = new Chart(ctx2, this.getOptions(half_type, 'min'));
                    }
            }
            var sc;
            $(document).ready(() => {
                var mySession = JSON.parse(sessionStorage.getItem("mySession"));
                if(mySession == undefined){
                	alert("로그인 후 이용해주세요.")
                    location.href="/c1"
                }

                init();
                addListener();
            });

            function init() {
                // 문서를 맨처음 실행할 때 실행하는 스크립트의 모임
            }

            function addListener() {
                // 상,하반기 버튼 선택
                $('.period_btn button').click((e) => {
                    $('.period_btn button').removeClass("selected")
                    $(e.currentTarget).addClass("selected")
                });
                $('#lookUp').click((e) => {
                    sc = new SurveyChart();
                    sc.getData();
                    sc.render('first_half');
                })
                $("#custom-select").click((e) => {
                    
                    sc.getData();
                    // getData에서 년도 받아오고 Query에서도 년도 처리 해야함.
                })
                $('#first').click((e) => {
                    sc.render('first_half');
                })
                $('#second').click((e) => {
                    sc.render('second_half');
                })
                //전체 선택
                $('.all_pick').on('click', function () {
                    let tab_id = document.querySelector('.tablinks.active').dataset.floor;
                    if (tab_id == 01) {
                        $('#1F .pick').addClass('clicked')
                    } else if (tab_id == 02) {
                        $('#2F .pick').addClass('clicked')
                    } else {
                        $('#3F .pick').addClass('clicked')
                    }
                });

                //전체 취소
                $('.no_pick').on('click', function () {
                    let tab_id = $('.tablinks.active').data("floor");
                    $("#" + tab_id + " .pick").removeClass('clicked');
                    if (tab_id == 01) {
                        $('#1F .pick').removeClass('clicked')
                    } else if (tab_id == 02) {
                        $('#2F .pick').removeClass('clicked')
                    } else {
                        $('#3F .pick').removeClass('clicked')
                    }
                });

                //조회하기 팝업
                var modal = document.getElementById('myModal');
                var btn = document.getElementById("lookUp");
                var span = document.getElementsByClassName("close")[0];
                btn.onclick = function () {
                    modal.style.display = "block";
                }

                span.onclick = function () {
                    modal.style.display = "none";
                }

                window.onclick = function (event) {
                    if (event.target == modal) {
                        modal.style.display = "none";
                    }
                }

                // 조회할 구역 선택 이벤트 리스너
                let paths = document.getElementsByClassName('pick')
                let paths2 = document.getElementsByClassName('svg_txt') //문자 클래스 
                for (let i = 0; i < paths.length; i++) {
                    paths[i].addEventListener('click', toggleClass)
                    paths2[i].addEventListener('click', toggleClass)
                }

            }

            function toggleClass() {
                if (this.tagName == 'text' && this.className.animVal.substring(8) != 'select') {
                    this.classList.toggle('select')
                    $('polygon[name=' + this.id + ']').addClass('clicked')
                    $('path[name=' + this.id + ']').addClass('clicked')
                } else if (this.tagName == 'text' && this.className.animVal.substring(8) == 'select') {
                    $('#' + this.id).removeClass('select')
                    $('polygon[name=' + this.id + ']').removeClass('clicked')
                    $('path[name=' + this.id + ']').removeClass('clicked')
                }
                if (this.tagName != 'text') {
                    this.classList.toggle('clicked')
                }
            }

            function test(){
                console.log("aaa'");

            }
        </script>

        <script>
            var x, i, j, selElmnt, a, b, c;
            /*look for any elements with the class "custom-select":*/
            x = document.getElementsByClassName("custom-select");
            for (i = 0; i < x.length; i++) {
                selElmnt = x[i].getElementsByTagName("select")[0];
                /*for each element, create a new DIV that will act as the selected item:*/
                a = document.createElement("DIV");
                a.setAttribute("class", "select-selected");
                a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
                x[i].appendChild(a);
                /*for each element, create a new DIV that will contain the option list:*/
                b = document.createElement("DIV");
                b.setAttribute("class", "select-items select-hide");
                for (j = 1; j < selElmnt.length; j++) {
					/*for each option in the original select element,
					create a new DIV that will act as an option item:*/
                    c = document.createElement("DIV");
                    c.innerHTML = selElmnt.options[j].innerHTML;
                    c.addEventListener("click", function (e) {
						/*when an item is clicked, update the original select box,
						and the selected item:*/
                        var y, i, k, s, h;
                        s = this.parentNode.parentNode.getElementsByTagName("select")[0];
                        h = this.parentNode.previousSibling;
                        for (i = 0; i < s.length; i++) {
                            if (s.options[i].innerHTML == this.innerHTML) {
                                s.selectedIndex = i;
                                h.innerHTML = this.innerHTML;
                                y = this.parentNode.getElementsByClassName("same-as-selected");
                                for (k = 0; k < y.length; k++) {
                                    y[k].removeAttribute("class");
                                }
                                this.setAttribute("class", "same-as-selected");
                                break;
                            }
                        }
                        h.click();
                    });
                    b.appendChild(c);
                }
                x[i].appendChild(b);
                a.addEventListener("click", function (e) {
					/*when the select box is clicked, close any other select boxes,
					and open/close the current select box:*/
                    e.stopPropagation();
                    closeAllSelect(this);
                    this.nextSibling.classList.toggle("select-hide");
                    this.classList.toggle("select-arrow-active");
                });
            }
            function closeAllSelect(elmnt) {
				/*a function that will close all select boxes in the document,
				except the current select box:*/
                var x, y, i, arrNo = [];
                x = document.getElementsByClassName("select-items");
                y = document.getElementsByClassName("select-selected");
                for (i = 0; i < y.length; i++) {
                    if (elmnt == y[i]) {
                        arrNo.push(i)
                    } else {
                        y[i].classList.remove("select-arrow-active");
                    }
                }
                for (i = 0; i < x.length; i++) {
                    if (arrNo.indexOf(i)) {
                        x[i].classList.add("select-hide");
                    }
                }
            }
			/*if the user clicks anywhere outside the select box,
			then close all select boxes:*/
            document.addEventListener("click", closeAllSelect);
        </script>

        <!-- 센트럴돔 입점지역 탭 -->
        <script>
            function openMap(evt, mapFloor) {
                var i, tabcontent, tablinks;
                tabcontent = document.getElementsByClassName("tabcontent");
                for (i = 0; i < tabcontent.length; i++) {
                    tabcontent[i].style.display = "none";
                }
                tablinks = document.getElementsByClassName("tablinks");
                for (i = 0; i < tablinks.length; i++) {
                    tablinks[i].className = tablinks[i].className.replace(" active", "");
                }
                document.getElementById(mapFloor).style.display = "block";
                evt.currentTarget.className += " active";
            }

            // Get the element with id="defaultOpen" and click on it
            document.getElementById("defaultOpen").click();
        </script>
</body>

</html>