<!DOCTYPE html>
<html lang="ko">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="stylesheet" href="/css/driver_app.css">
  <script src="/js/jquery-3.3.1.min.js"></script>
  <!-- seat CSS -->
  <link rel="stylesheet" type="text/css" href="/css/lib/jquery.seat-charts.css">
</head>

<body>

  <div class="wrap">


    <div class="tab">
      <button class="tab_button" onclick="openLocation(event, 'pyeongtaek')" id="defaultOpen">평택 출발</button>
      <button class="tab_button" onclick="openLocation(event, 'seoul')">동대문 출발</button>
    </div>

    <!-- 평택 출발 -->
    <div id="pyeongtaek" class="tabcontent">

      <div class="bus_info">
        <h3>운행정보</h3>
        <dd>평택 21:00 - 서울동대문 04:00</dd>
        <dd>유림고속 (1111)</dd>
      </div>

      <button class="btn qr">QR코드 스캔하기</button>


    <!-- 좌석 -->
    <div id="bus_seat_layer" class="tabcontent">
        <div class="container">
            <!--좌석선택표-->
            <div class="seat-map"></div>
        </div>
    </div>
      <div class="btn reload">새로고침</div>

      <!-- 하단버튼 -->
      <button class="btn check check_p" id="check_p" onclick="busReadyPy(this)">승차완료</button>
      <button class="btn start start_p" id="start_p" onclick="busStartPy(this)">출발</button>
      <button class="btn start_cancel_p" id="start_cancel_p">출발취소</button>

      <!-- 출발 모달창 -->
      <div class="modal start_modal start_p_modal">
        <div class="modal-inner">
          <h3>출발하시겠습니까?</h3>
          <p>확인을 누르면 현재 운행하는 장차의
            온라인 예매가 마감되어 예매가 불가능해집니다.</p>
          <div class="modal_inner_btn">
            <a onclick="closePy()">취소</a>
            <a onclick="checkPy()">확인</a>
          </div>
        </div>
      </div>

      <!-- 출발취소 모달창 -->
      <div class="modal start_cancel_modal start_cancel_p_modal">
        <div class="modal-inner">
          <h3>출발취소 하시겠습니까?</h3>
          <p>확인을 누르면 현재 운행하는 장차의
            온라인 예매가 다시 열립니다.<br>
            <span>단, 출발시간이 지났을 경우 
              온라인예매는 자동으로 닫힙니다.</span></p>
          <div class="modal_inner_btn">
            <a href="#" id="no2">취소</a>
            <a href="#" id="cancel_p">확인</a>
          </div>
        </div>
      </div>
      
    </div>



    <!-- 서울동대문 출발 -->
    <div id="seoul" class="tabcontent">

      <div class="bus_info">
        <h3>운행정보</h3>
        <dd>평택 21:00 - 서울동대문 04:00</dd>
        <dd>유림고속 (1111)</dd>
      </div>

      <button class="btn qr">QR코드 스캔하기</button>


      <!-- 좌석 -->
      <!-- <div class="seat-map seatCharts-container">
      </div> -->
      <div class="btn reload">새로고침</div>

      <!-- 하단버튼 -->
      <button class="btn check check_s" id="check_s" onclick="busReadySe(this)">승차완료</button>
      <button class="btn start start_s" id="start_s"  onclick='busStartSe(this)'>출발</button>
      <button class="btn start_cancel_s" id="start_cancel_s">출발취소</button>


      <!-- 출발버튼 클릭 시 모달창 -->
      <div class="start_modal start_s_modal">
        <div class="modal-inner">
          <h3>출발하시겠습니까?</h3>
          <div class="modal_inner_btn">
            <a onclick="closeSe()">취소</a>
            <a onclick="checkSe()">확인</a>
          </div>
        </div>
      </div>
    </div>


    <!-- footer -->
    <footer>
      <dd>문의전화 <span>0000 - 0000</span></dd>
      <dd>(평일 09:00 ~ 18:00, 유료)</dd>
    </footer>
  </div>



</body>
<script src="/js/lib/jquery.seat-charts.js"></script>
<!-- 평택, 동대문 탭 -->
<script>
    function openLocation(evt, locationName) {
        var i, tabcontent, tab_button;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tab_button = document.getElementsByClassName("tab_button");
        for (i = 0; i < tab_button.length; i++) {
            tab_button[i].className = tab_button[i].className.replace(" active", "");
        }
        document.getElementById(locationName).style.display = "block";
        evt.currentTarget.className += " active";
    }
    document.getElementById("defaultOpen").click();

    $(document).ready(function(){
        $.ajax({
            url: "api/user/resCarList",
            method: "post",
            dataType: "json",
            success: function (res) {
                sessionStorage.setItem("car_list", JSON.stringify(res.data));
                let ctId = res.data[0].ctID;
                let price = res.data[0].seatPrice;
                openBus(ctId,price);
            }
        });
    })

  // 하단버튼 이벤트
    function busReadyPy(e){
        $(e).toggleClass("checked"),
        $(".start_p").toggleClass("started");
    }

  // 하단버튼 이벤트

    function busReadySe(e){
        $(e).toggleClass("checked"),
        $(".start_s").toggleClass("started");
    }

    function busStartPy(e){
        if($('#check_p').hasClass('checked') == false){
            return false;
        }else{
            $('.start_p_modal').css('display','block')
        }
    }

    function busStartSe(e){
        if($('#check_s').hasClass('checked') == false){
            return false;
        }else{
            $('.start_s_modal').css('display','block')
        }
    }


    function closePy(){
        $('.start_p_modal').css('display','none')
    }
    function closeSe(){
        $('.start_s_modal').css('display','none')
    }


    function checkPy(){
        $('.start_p_modal').css('display','none')
        $('#check_p').css('display','none');
        $('#start_p').css('display','none');
        $('#start_cancel_p').css('display','block');
    }

    function checkSe(){
        $('.start_s_modal').css('display','none')
        $('#check_s').css('display','none');
        $('#start_s').css('display','none');
        $('#start_cancel_s').css('display','block');
    }

    $("#yes").click(function(){
    $(".check_p").css('display', 'none'),
    $(".start_p").removeClass('start_p'),
    $(".started").css('display', 'none'),
    $(".start_cancel_p").css('display', 'block');
    });

    

    function openBus(busSeat,price) {
            let car_info = JSON.parse(sessionStorage.getItem("car_list"));
            //버스 정보
            let bus_text1 = car_info[0].startDay+'(' +getInputDayLabel(car_info[0].deptTe)+') ';
            let bus_text2 = '평택 '+car_info[0].startTime+' - '+'동대문 '+car_info[0].returnTime + ' ';
            let bus_text3 = car_info[0].b_name+'('+car_info[0].backNum+')';
            $('.bus_info_txt').text(bus_text1 + bus_text2 + bus_text3)

            // console.log('evt',evt);
            var i, tablinks
            //좌석 선택시 우측 문구 삭제
            $('.before_p').css('display','none');
            sessionStorage.removeItem('seat_price');
            tablinks = document.getElementsByClassName("tablinks");
            //alert(seatPrice);
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            sessionStorage.setItem('ct_id', busSeat);
            //좌석금액 세션에 저장
            // sessionStorage.setItem('seat_price', evt.currentTarget.value);
            sessionStorage.setItem('seat_price', price);

            document.getElementById("bus_seat_layer").style.display = "block";
            // evt.currentTarget.className += " active";
            var firstSeatLabel = 1;


            //좌석금액 불러오기
            var seatPay = Number(sessionStorage.getItem('seat_price'));

            var $cart = $('#selected-seats'),
                $nums = $('#selected_seats_num'),
                $counter = $('#selected_seats_cnt'),
                $now_price = $('#selected_seats_price'),
                $origin_price = $('#original_price'),
                $sale_price = $('#sale_price'),
                $payment_seats_cnt = $('#payment_seats_cnt'),
                $payment_seats_nums = $('#payment_seats_nums'),
                $total_price = $('#total_price'),
                sc = $('.seat-map').seatCharts({
                    map: [
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'eeeee',
                    ],
                    seats: {
                        e: {

                            classes: '일반', //your custom CSS class
                            category: '일반'
                        }

                    },
                    naming: {
                        top: false,
                        getLabel: function (character, row, column) {
                            return firstSeatLabel++;
                        },
                    },
                    click: function () {
                        if (this.status() == 'available') {
                            if (selected_seats_cnt >= 4) {
                                alert("최대 4개까지 선택가능합니다.");
                                return this.style();
                            }
                            
                            selected_seats_cnt = sc.find('selected').length + 1;
                            selected_seats.push(this.settings.label);
                            let origin_price = recalculateTotal(sc) + Number(sessionStorage.getItem("seat_price"));

                            $nums.text('　'.concat(selected_seats.join('번, ') + ((selected_seats.length > 0) ? '번' : '')));
                            $payment_seats_nums.text(selected_seats.join('번, ') + ((selected_seats.length > 0) ? '번' : ''));

                            $counter.text('　'.concat(sc.find('selected').length + 1));
                            $payment_seats_cnt.text(sc.find('selected').length + 1);
                            $origin_price.text(formatNumber(origin_price) + '원');
                            $origin_price.data('price', origin_price);
                            //할인 가격
                            // $sale_price.text('-' + formatNumber(origin_price) + '원');
                            // $sale_price.data('price', origin_price);

                            $now_price.text('　'+origin_price+'원')
                            $total_price.text(origin_price+'원')
                            return 'selected';
                        } else if (this.status() == 'selected') {

                            selected_seats_cnt = sc.find('selected').length - 1;
                            let idx = selected_seats.indexOf(this.settings.label);
                            selected_seats.splice(idx, 1);

                            let origin_price = recalculateTotal(sc) - Number(sessionStorage.getItem("seat_price"));

                            $nums.text('　'.concat(selected_seats.join('번, ') + ((selected_seats.length > 0) ? '번' : '')));
                            $payment_seats_nums.text(selected_seats.join('번, ') + ((selected_seats.length > 0) ? '번' : ''));

                            $counter.text('　'.concat(sc.find('selected').length - 1));
                            $payment_seats_cnt.text(sc.find('selected').length - 1);
                            $origin_price.text(formatNumber(origin_price) + '원');
                            $origin_price.data('price', origin_price);
                            $sale_price.text('-' + formatNumber(origin_price) + '원');
                            $sale_price.data('price', origin_price);
                            $now_price.text('　'+origin_price+'원')

                            //seat has been vacated
                            if(selected_seats_cnt === 0){
                                $nums.text('　');
                                $now_price.text('　');
                                $counter.text('　');
                            }

                            return 'available';
                        } else if (this.status() == 'unavailable') {
                            //seat has been already booked
                            return 'unavailable';
                        } else {
                            return this.style();
                        }
                    }
                });

            //this will handle "[cancel]" link clicks
            $('#selected-seats').on('click', '.cancel-cart-item', function () {
                //let's just trigger Click event on the appropriate seat, so we don't have to repeat the logic here
                sc.get($(this).parents('li:first').data('seatId')).click();
            });



            flushSeat();

        }



        function getInputDayLabel(date) {
            var week = new Array('일', '월', '화', '수', '목', '금', '토');
            var today = new Date(date).getDay();
            var todayLabel = week[today];
            return todayLabel;
        }

        function recalculateTotal(sc) {
            var total = 0;

            //basically find every selected seat and sum its price
            sc.find('selected').each(function () {
                total += Number(sessionStorage.getItem("seat_price"));
            });

            return total;
        }

        function flushSeat() {
            var sc = $('.seat-map').seatCharts();
            selected_seats = [];
            selected_seats_cnt = 0;
            sc.find('e.selected').status('available');
            $("#selected_seats_num").text('　');
            $("#selected_seats_cnt").text('　');
            $('#selected_seats_price').text('　');
            // 데이터 가져와서 예약된 좌석 상태 설정.
            var ct_id = sessionStorage.getItem('ct_id');
            $.ajax({
                dataType: "json",
                method: "GET",
                url: "/api/useSeat/" + ct_id
            }).done((res) => {
                let seat_id_list = [];
                res.data.map((seat_num) => {
                    seat_id_list.push(getSeatId(seat_num));
                });
                console.log('res :',res);
                sc.find('unavailable').status('available');
                sc.status(seat_id_list, 'unavailable');
            });
        }

        // 45인승 기준 seatId 가져오기
        function getSeatId(seat_num) {
            if (seat_num <= 45 && seat_num > 0) {

                let seat_id = "1_1";
                let row = '',
                    column = '';

                if (seat_num > 40) {
                    row = 11;
                    column = seat_num % 10;
                } else {
                    if ((seat_num % 4) === 0) {
                        row = Number.parseInt(seat_num / 4);
                        column = 4;
                    } else {
                        row = (Number.parseInt(seat_num / 4)) + 1;
                        column = seat_num % 4;
                    }

                    if (column >= 3) column += 1;
                }

                seat_id = row + "_" + column;
                return seat_id;
            } else {
                return null;
            }

        }


</script>

</html>