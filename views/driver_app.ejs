<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AZ369 기사전용어플</title>
    <link rel="stylesheet" href="/css/driver_app.css">
    <!-- 좌석 CSS -->
    <link rel="stylesheet" type="text/css" href="/css/lib/driver_seat-charts.css">
    <link rel="stylesheet" type="text/css" href="/css/lib/driver_booking.css">
    <!-- 장차예약 PC 화면 CSS -->
    <script src="/js/jquery-3.3.1.min.js"></script>
</head>

<body>

    <div class="wrap">


        <div class="tab">
            <button class="tab_button" onclick="openLocation(event, 'pyeongtaek')" id="defaultOpen">평택 출발</button>
            <button class="tab_button" onclick="openLocation(event, 'seoul')">동대문 출발</button>
        </div>

        <!-- 평택 출발 -->
        <div id="pyeongtaek" class="tabcontent">

            <div class="bus_info">
                <h3>운행정보</h3>
                <dd class='location_info'>평택 21:00 - 서울동대문 04:00</dd>
                <dd class='bus_name'>유림고속 (1111)</dd>
            </div>

            <button class="btn qr">QR코드 스캔하기</button>


            <!-- 좌석 -->
            <!-- 좌석범례 -->
            <div class="seat_legend">
                <ul>
                    <li><div class="legend legend01"></div><p>승차확인좌석</p></li>
                    <li><div class="legend legend02"></div><p>예매좌석</p></li>
                    <li><div class="legend legend03"></div><p>미예매좌석</p></li>
                </ul>
            </div>
            <!-- 좌석표 -->
            <div class="seat-map-py seatCharts-container">
            </div>
            <div class="btn reload" onclick="reload(this)" id='reloadPy'>새로고침</div>

            <!-- 하단버튼 -->
            <button class="btn check check_p" id="check_p" onclick="busReady(this)">승차완료</button>
            <button class="btn start start_p" id="start_p" onclick="busStart(this)">출발</button>
            <button class="btn start_cancel_p" id="start_cancel_p" onclick='busCancel(this)'>출발취소</button>

            <!-- 출발 모달창 -->
            <div class="start_modal start_p_modal">
                <div class="modal-inner">
                    <h3>출발하시겠습니까?</h3>
                    <p>확인을 누르면 현재 운행하는 장차의
                        온라인 예매가 마감됩니다. 예매마감 이후 현 장차의 예매가 불가능해집니다.</p>
                    <div class="modal_inner_btn">
                        <a onclick="startModalCancel(this)" id='startModalCancelPy' style="color: #767676;">취소</a>
                        <a onclick="startModalCheck(this)" id='startModalCheckPy' style="color: #c3a164;">확인</a>
                    </div>
                </div>
            </div>

            <!-- 출발취소 모달창 -->
            <div class="start_cancel_modal start_cancel_p_modal">
                <div class="modal-inner">
                    <h3>출발취소 하시겠습니까?</h3>
                    <p>확인을 누르면 현재 운행하는 장차의
                        온라인 예매가 다시 열립니다.<br>
                        <span>단, 출발시간이 지났을 경우
                            온라인예매는 자동으로 닫힙니다.</span></p>
                    <div class="modal_inner_btn">
                        <a onclick="cancelModalClose(this)" id='cancelModalClosePy' style="color: #767676;">취소</a>
                        <a onclick="cancelModalCheck(this)" id='cancelModalCheckPy' style="color: #c3a164;">확인</a>
                    </div>
                </div>
            </div>

        </div>



        <!-- 서울동대문 출발 -->
        <div id="seoul" class="tabcontent">

            <div class="bus_info">
                <h3>운행정보</h3>
                <dd class='location_info'>평택 21:00 - 서울동대문 04:00</dd>
                <dd class='bus_name'>유림고속 (1111)</dd>
            </div>

            <button class="btn qr">QR코드 스캔하기</button>

            <!-- 좌석 -->
            <!-- 좌석범례 -->
            <div class="seat_legend">
                <ul>
                    <li><div class="legend legend01"></div><p>승차확인좌석</p></li>
                    <li><div class="legend legend02"></div><p>예매좌석</p></li>
                    <li><div class="legend legend03"></div><p>미예매좌석</p></li>
                </ul>
            </div>
            <!-- 좌석표 -->
            <div class="seat-map-se seatCharts-container">
            </div>

            <div class="btn reload" onclick="reload(this)" id='reloadSe'>새로고침</div>

            <!-- 하단버튼 -->
            <button class="btn check check_s" id="check_s" onclick="busReady(this)">승차완료</button>
            <button class="btn start start_s" id="start_s" onclick='busStart(this)'>출발</button>
            <button class="btn start_cancel_s" id="start_cancel_s" onclick='busCancel(this)'>출발취소</button>


            <!-- 출발버튼 클릭 시 모달창 -->
            <div class="start_modal start_s_modal">
                <div class="modal-inner">
                    <h3>출발하시겠습니까?</h3>
                    <p>확인을 누르면 QR코드 스캔을 사용하실 수 없습니다.</p>
                    <div class="modal_inner_btn">
                        <a onclick="startModalCancel(this)" id='startModalCancelSe' style="color: #767676;">취소</a>
                        <a onclick="startModalCheck(this)" id='startModalCheckSe' style="color: #c3a164;">확인</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- 출발취소 모달창 -->
        <div class="start_cancel_modal start_cancel_s_modal">
            <div class="modal-inner">
                <h3>출발취소 하시겠습니까?</h3>
                <p>취소를 누르면 QR코드 스캔을 다시 사용하실 수 있습니다.</p>
                <div class="modal_inner_btn">
                    <a onclick="cancelModalClose(this)" id='cancelModalCloseSe' style="color: #767676;">취소</a>
                    <a onclick="cancelModalCheck(this)" id='cancelModalCheckSe' style="color: #c3a164;">확인</a>
                </div>
            </div>
        </div>


        <!-- footer -->
        <footer>
            <dd>문의전화 <span>0000 - 0000</span></dd>
            <dd>(평일 09:00 ~ 18:00, 유료)</dd>
        </footer>
    </div>
    <div id="popup" class="layer">
        <div class="popup_box">
            <div class="popup_tit">예약자 정보</div>
            <table>
                <tbody>
                    <tr><th>좌석번호</th><td id='user_seat_number'>1번</td></tr>
                    <tr><th>이름</th><td id='user_name'>김정우</td></tr>
                    <tr><th>휴대번호</th><td id='user_phone'>01012341234</td></tr>
                    <tr><th>승차여부</th><td id='user_checked'>N</td></tr>
                </tbody>
            </table>
            <div class="popup_btn">
                <a onclick="javascript:$('#popup').css('display','none')" class="popup_close">닫기</a>
            </div>
        </div>
    </div>


</body>
<script src="/js/lib/jquery.seat-charts.js"></script>
<!-- 평택, 동대문 탭 -->
<script>
    function openLocation(evt, locationName) {
        let car_info = JSON.parse(sessionStorage.getItem("car_list"));
        openBus(car_info[0].ctID,locationName);
        var i, tabcontent, tab_button;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tab_button = document.getElementsByClassName("tab_button");
        for (i = 0; i < tab_button.length; i++) {
            tab_button[i].className = tab_button[i].className.replace(" active", "");
        }
        document.getElementById(locationName).style.display = "block";
        evt.currentTarget.className += " active";
    }
    document.getElementById("defaultOpen").click();

    //데이터 로드 및 가져올 데이터 쿼리 타입 설정
    $(document).ready(function(){

        let query_type = localStorage.getItem('query_type')
        $.ajax({
            url: "api/user/resCarList?type="+query_type,
            method: "post",
            dataType: "json",
            success: function (res) {
                sessionStorage.setItem("car_list", JSON.stringify(res.data));
            }
        });
    })

    


    var selected_seats = [];
    var selected_seats_cnt = 0;
    var seatPrice = 0;


    function openBus(busSeat,locationName) {
        let $seat;
        let car_info = JSON.parse(sessionStorage.getItem("car_list"));
        let $location_info = $('.location_info');
        let $bus_name = $('.bus_name');
        console.log('car_info', car_info);
        if(locationName == "pyeongtaek"){
            
            $location_info.text('평택 '+car_info[0].deptYM+' ('+getInputDayLabel(car_info[0].deptDay)+') '+car_info[0].startTime);
            $bus_name.text(car_info[0].b_name+'('+car_info[0].backNum+')');
            $seat = $('.seat-map-py');
        }else{
            $location_info.text('서울 동대문 '+car_info[0].retuYM+' ('+getInputDayLabel(car_info[0].retnDay)+') '+car_info[0].returnTime);
            $bus_name.text(car_info[0].b_name+'('+car_info[0].backNum+')');
            $seat = $('.seat-map-se');
        }
        

        var i, tablinks
        tablinks = document.getElementsByClassName("tablinks");
        //alert(seatPrice);
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        sessionStorage.setItem('ct_id', busSeat);

        // document.getElementById("bus_seat_layer").style.display = "block";
        // evt.currentTarget.className += " active";
        var firstSeatLabel = 1;


        //좌석금액 불러오기

        var $cart = $('#selected-seats'),
            $nums = $('#selected_seats_num'),
            $counter = $('#selected_seats_cnt'),
            sc = $seat.seatCharts({
                map: [
                    'ee_ee',
                    'ee_ee',
                    'ee_ee',
                    'ee_ee',
                    'ee_ee',
                    'ee_ee',
                    'ee_ee',
                    'ee_ee',
                    'ee_ee',
                    'ee_ee',
                    'eeeee',
                ],
                seats: {
                    e: {

                        classes: '일반', //your custom CSS class
                        category: '일반'
                    }

                },
                naming: {
                    top: false,
                    getLabel: function (character, row, column) {
                        return firstSeatLabel++;
                    },
                },
                click: function () {
                    let bus_seat_number = this.settings.label;
                    let bus_ct_id = sessionStorage.getItem("ct_id");
                    let scan_checked;
                    if (this.status() == 'available') {
                        // alert('예매되지 않은 좌석입니다.')
                        // return 'selected';
                    } 
                    //스캔 된 좌석
                    else if (this.status() == 'selected') {
                        scan_checked = 'selected'
                        userSeatInfo(bus_ct_id,bus_seat_number,scan_checked);
                        return 'selected';
                    } 
                    //스캔 되지 않은 예매된 좌석
                    else if (this.status() == 'unavailable') {
                        scan_checked = 'unavailable'
                        userSeatInfo(bus_ct_id,bus_seat_number,scan_checked);
                        return 'unavailable';
                    } else {

                        return this.style();
                    }
                }
            });

        //현재 예약된 자석
        flushSeat(locationName);
    }

    let $user_checked = $('#user_checked');
    function userSeatInfo(bus_id, seat_number, scan_checked){
        
        $.ajax({
            url: '/api/bus_user_info',
            method: 'get',
            data : { 
                ct_id : bus_id,
                cr_seatnum : seat_number        
            },
            success : function(res){
                $('#popup').css('display','block')
                $('#user_seat_number').text(res.data[0].CR_SeatNum);
                $('#user_name').text(res.data[0].U_NAME);
                $('#user_phone').text(res.data[0].U_PHONE);
                //클릭한 좌석이 확인된 여부
                if(scan_checked == 'selected'){
                    $user_checked.css('color','blue')
                    $user_checked.text('Y');
                }else{
                    $user_checked.css('color','red')
                    $user_checked.text('N');
                }
            }
        });
    }

        
    function flushSeat(locationName) {
        let $seat;
        if(locationName == "pyeongtaek"){
            $seat = $('.seat-map-py')
        }else{
            $seat = $('.seat-map-se')
        }

        var sc = $seat.seatCharts();
        selected_seats = [];
        selected_seats_cnt = 0;
        sc.find('e.selected').status('available');
        // 데이터 가져와서 예약된 좌석 상태 설정.
        var ct_id = sessionStorage.getItem('ct_id');
        $.ajax({
            dataType: "json",
            method: "GET",
            url: "/api/busSeat/" + ct_id
        }).done((res) => {
            let seat_id_list = [];
            res.data.map((seat_num) => {
                seat_id_list.push(getSeatId(seat_num));
            });
            sc.find('unavailable').status('available');
            sc.status(seat_id_list, 'unavailable');
        });
    }

    // 45인승 기준 seatId 가져오기
    function getSeatId(seat_num) {
        if (seat_num <= 45 && seat_num > 0) {

            let seat_id = "1_1";
            let row = '',
                column = '';

            if (seat_num > 40) {
                row = 11;
                column = seat_num % 10;
            } else {
                if ((seat_num % 4) === 0) {
                    row = Number.parseInt(seat_num / 4);
                    column = 4;
                } else {
                    row = (Number.parseInt(seat_num / 4)) + 1;
                    column = seat_num % 4;
                }

                if (column >= 3) column += 1;
            }

            seat_id = row + "_" + column;
            return seat_id;
        } else {
            return null;
        }

    }

    // 승차 완료 버튼
    function busReady(e) {
        //승차 완료 클릭시 출발 버튼 활성화
        if(e.id === 'check_p'){
            $(e).toggleClass("checked"),
            $(".start_p").toggleClass("started");
        }else{
            $(e).toggleClass("checked"),
            $(".start_s").toggleClass("started");
        }
    }


    // 버스 출발 버튼
    function busStart(e) {
        //출발 클릭시 QR코드 비활성화 경고 및 재확인 팝업
        if(e.id === 'start_p'){
            if ($('#check_p').hasClass('checked') == false) {
                return false;
            } else {
                $('.start_p_modal').css('display', 'block')
            }
        }else{
            if ($('#check_s').hasClass('checked') == false) {
                return false;
            } else {
                $('.start_s_modal').css('display', 'block')
            }
        }
    }

    // 출발 취소 버튼
    function busCancel(e) {
        //출발 취소 확인 모달 활성화
        if(e.id === 'start_cancel_p'){
            $('.start_cancel_p_modal').css('display', 'block')
        }else{
            $('.start_cancel_s_modal').css('display', 'block')
        }
    }


    // 출발확인 모달 : 취소 ---------------------
    function startModalCancel(e) {
        if(e.id === 'startModalCancelPy'){
            $('.start_p_modal').css('display', 'none')
        }else{
            $('.start_s_modal').css('display', 'none')
        }
    }

    // 출발확인 모달 : 확인 ---------------------
    function startModalCheck(e) {
        if(e.id === 'startModalCheckPy'){
            $('.start_p_modal').css('display', 'none')
            $('#check_p').css('display', 'none');
            $('#start_p').css('display', 'none');
            $('#start_cancel_p').css('display', 'block');
        }else{
            $('.start_s_modal').css('display', 'none')
            $('#check_s').css('display', 'none');
            $('#start_s').css('display', 'none');
            $('#start_cancel_s').css('display', 'block');
        }
        localStorage.setItem('query_type','bus_start');
    }


    // 출발취소 모달 : 모달 닫기 -----
    function cancelModalClose(e) {
        if(e.id === 'cancelModalClosePy'){
            $('.start_cancel_p_modal').css('display', 'none')
        }else{
            $('.start_cancel_s_modal').css('display', 'none')
        }
    }
    // 출발취소 모달 : 취소 완료 ----
    function cancelModalCheck(e) {
        if(e.id === 'cancelModalCheckPy'){
            //출발 취소시 다시 예약 가능하도록 쿼리문 변경
            localStorage.removeItem('query_type');
            $('.start_cancel_p_modal').css('display', 'none')
            $('#check_p').css('display', 'block');
            $('#check_p').removeClass('checked');
            $('#start_p').css('display', 'block');
            $('#start_p').removeClass('started');
            $('#start_cancel_p').css('display', 'none');
        }else{
            $('.start_cancel_s_modal').css('display', 'none')
            $('#check_s').css('display', 'block');
            $('#check_s').removeClass('checked');
            $('#start_s').css('display', 'block');
            $('#start_s').removeClass('started');
            $('#start_cancel_s').css('display', 'none');
        }
    }

    //새로고침
    function reload(e){
        let car_info = JSON.parse(sessionStorage.getItem("car_list"));
        if(e.id === 'reloadPy'){
            openBus(car_info[0].ctID,'pyeongtaek');
        }else{
            openBus(car_info[0].ctID,'seoul');
        }
    }

    //요일 계산 함수
    function getInputDayLabel(date) {
        var week = new Array('일', '월', '화', '수', '목', '금', '토');
        var todayLabel = week[date-1];
        return todayLabel;
    }


</script>

</html>